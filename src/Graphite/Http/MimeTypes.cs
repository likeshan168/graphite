using Graphite.Extensions;

namespace Graphite.Http
{
    public static class MimeTypes
    {
        public const string ApplicationAndrewInset = "application/andrew-inset";
        public const string ApplicationApplixware = "application/applixware";
        public const string ApplicationAtomcatXml = "application/atomcat+xml";
        public const string ApplicationAtomsvcXml = "application/atomsvc+xml";
        public const string ApplicationAtomXml = "application/atom+xml";
        public const string ApplicationCcxmlXml = "application/ccxml+xml";
        public const string ApplicationCuSeeme = "application/cu-seeme";
        public const string ApplicationDavmountXml = "application/davmount+xml";
        public const string ApplicationEcmascript = "application/ecmascript";
        public const string ApplicationEmmaXml = "application/emma+xml";
        public const string ApplicationEpubZip = "application/epub+zip";
        public const string ApplicationFontTdpfr = "application/font-tdpfr";
        public const string ApplicationFontWoff = "application/font-woff";
        public const string ApplicationFormUrlEncoded = "application/x-www-form-urlencoded";
        public const string ApplicationHyperstudio = "application/hyperstudio";
        public const string ApplicationJavaArchive = "application/java-archive";
        public const string ApplicationJavascript = "application/javascript";
        public const string ApplicationJavaSerializedObject = "application/java-serialized-object";
        public const string ApplicationJavaVm = "application/java-vm";
        public const string ApplicationJson = "application/json";
        public const string ApplicationLostXml = "application/lost+xml";
        public const string ApplicationMacBinhex40 = "application/mac-binhex40";
        public const string ApplicationMacCompactpro = "application/mac-compactpro";
        public const string ApplicationMarc = "application/marc";
        public const string ApplicationMathematica = "application/mathematica";
        public const string ApplicationMathmlXml = "application/mathml+xml";
        public const string ApplicationMbox = "application/mbox";
        public const string ApplicationMediaservercontrolXml = "application/mediaservercontrol+xml";
        public const string ApplicationMp4 = "application/mp4";
        public const string ApplicationMsword = "application/msword";
        public const string ApplicationMxf = "application/mxf";
        public const string ApplicationOctetStream = "application/octet-stream";
        public const string ApplicationOda = "application/oda";
        public const string ApplicationOebpsPackageXml = "application/oebps-package+xml";
        public const string ApplicationOgg = "application/ogg";
        public const string ApplicationOnenote = "application/onenote";
        public const string ApplicationPatchOpsErrorXml = "application/patch-ops-error+xml";
        public const string ApplicationPdf = "application/pdf";
        public const string ApplicationPgpEncrypted = "application/pgp-encrypted";
        public const string ApplicationPgpSignature = "application/pgp-signature";
        public const string ApplicationPicsRules = "application/pics-rules";
        public const string ApplicationPkcs10 = "application/pkcs10";
        public const string ApplicationPkcs7Mime = "application/pkcs7-mime";
        public const string ApplicationPkcs7Signature = "application/pkcs7-signature";
        public const string ApplicationPkixCert = "application/pkix-cert";
        public const string ApplicationPkixcmp = "application/pkixcmp";
        public const string ApplicationPkixCrl = "application/pkix-crl";
        public const string ApplicationPkixPkipath = "application/pkix-pkipath";
        public const string ApplicationPlsXml = "application/pls+xml";
        public const string ApplicationPostscript = "application/postscript";
        public const string ApplicationPrsCww = "application/prs.cww";
        public const string ApplicationRdfXml = "application/rdf+xml";
        public const string ApplicationReginfoXml = "application/reginfo+xml";
        public const string ApplicationRelaxNgCompactSyntax = "application/relax-ng-compact-syntax";
        public const string ApplicationResourceListsDiffXml = "application/resource-lists-diff+xml";
        public const string ApplicationResourceListsXml = "application/resource-lists+xml";
        public const string ApplicationRlsServicesXml = "application/rls-services+xml";
        public const string ApplicationRsdXml = "application/rsd+xml";
        public const string ApplicationRssXml = "application/rss+xml";
        public const string ApplicationRtf = "application/rtf";
        public const string ApplicationSbmlXml = "application/sbml+xml";
        public const string ApplicationScvpCvRequest = "application/scvp-cv-request";
        public const string ApplicationScvpCvResponse = "application/scvp-cv-response";
        public const string ApplicationScvpVpRequest = "application/scvp-vp-request";
        public const string ApplicationScvpVpResponse = "application/scvp-vp-response";
        public const string ApplicationSdp = "application/sdp";
        public const string ApplicationSetPaymentInitiation = "application/set-payment-initiation";
        public const string ApplicationSetRegistrationInitiation = "application/set-registration-initiation";
        public const string ApplicationShfXml = "application/shf+xml";
        public const string ApplicationSmilXml = "application/smil+xml";
        public const string ApplicationSparqlQuery = "application/sparql-query";
        public const string ApplicationSparqlResultsXml = "application/sparql-results+xml";
        public const string ApplicationSrgs = "application/srgs";
        public const string ApplicationSrgsXml = "application/srgs+xml";
        public const string ApplicationSsmlXml = "application/ssml+xml";
        public const string ApplicationVnd3gpp2Tcap = "application/vnd.3gpp2.tcap";
        public const string ApplicationVnd3gppPicBwLarge = "application/vnd.3gpp.pic-bw-large";
        public const string ApplicationVnd3gppPicBwSmall = "application/vnd.3gpp.pic-bw-small";
        public const string ApplicationVnd3gppPicBwVar = "application/vnd.3gpp.pic-bw-var";
        public const string ApplicationVnd3mPostItNotes = "application/vnd.3m.post-it-notes";
        public const string ApplicationVndAccpacSimplyAso = "application/vnd.accpac.simply.aso";
        public const string ApplicationVndAccpacSimplyImp = "application/vnd.accpac.simply.imp";
        public const string ApplicationVndAcucobol = "application/vnd.acucobol";
        public const string ApplicationVndAcucorp = "application/vnd.acucorp";
        public const string ApplicationVndAdobeAirApplicationInstallerPackageZip = "application/vnd.adobe.air-application-installer-package+zip";
        public const string ApplicationVndAdobeXdpXml = "application/vnd.adobe.xdp+xml";
        public const string ApplicationVndAdobeXfdf = "application/vnd.adobe.xfdf";
        public const string ApplicationVndAirzipFilesecureAzf = "application/vnd.airzip.filesecure.azf";
        public const string ApplicationVndAirzipFilesecureAzs = "application/vnd.airzip.filesecure.azs";
        public const string ApplicationVndAmazonEbook = "application/vnd.amazon.ebook";
        public const string ApplicationVndAmericandynamicsAcc = "application/vnd.americandynamics.acc";
        public const string ApplicationVndAmigaAmi = "application/vnd.amiga.ami";
        public const string ApplicationVndAndroidPackageArchive = "application/vnd.android.package-archive";
        public const string ApplicationVndAnserWebCertificateIssueInitiation = "application/vnd.anser-web-certificate-issue-initiation";
        public const string ApplicationVndAnserWebFundsTransferInitiation = "application/vnd.anser-web-funds-transfer-initiation";
        public const string ApplicationVndAntixGameComponent = "application/vnd.antix.game-component";
        public const string ApplicationVndAppleInstallerXml = "application/vnd.apple.installer+xml";
        public const string ApplicationVndArastraSwi = "application/vnd.arastra.swi";
        public const string ApplicationVndAudiograph = "application/vnd.audiograph";
        public const string ApplicationVndBlueiceMultipass = "application/vnd.blueice.multipass";
        public const string ApplicationVndBmi = "application/vnd.bmi";
        public const string ApplicationVndBusinessobjects = "application/vnd.businessobjects";
        public const string ApplicationVndChemdrawXml = "application/vnd.chemdraw+xml";
        public const string ApplicationVndChipnutsKaraokeMmd = "application/vnd.chipnuts.karaoke-mmd";
        public const string ApplicationVndCinderella = "application/vnd.cinderella";
        public const string ApplicationVndClaymore = "application/vnd.claymore";
        public const string ApplicationVndClonkC4group = "application/vnd.clonk.c4group";
        public const string ApplicationVndCommonspace = "application/vnd.commonspace";
        public const string ApplicationVndContactCmsg = "application/vnd.contact.cmsg";
        public const string ApplicationVndCosmocaller = "application/vnd.cosmocaller";
        public const string ApplicationVndCrickClicker = "application/vnd.crick.clicker";
        public const string ApplicationVndCrickClickerKeyboard = "application/vnd.crick.clicker.keyboard";
        public const string ApplicationVndCrickClickerPalette = "application/vnd.crick.clicker.palette";
        public const string ApplicationVndCrickClickerTemplate = "application/vnd.crick.clicker.template";
        public const string ApplicationVndCrickClickerWordbank = "application/vnd.crick.clicker.wordbank";
        public const string ApplicationVndCriticaltoolsWbsXml = "application/vnd.criticaltools.wbs+xml";
        public const string ApplicationVndCtcPosml = "application/vnd.ctc-posml";
        public const string ApplicationVndCupsPpd = "application/vnd.cups-ppd";
        public const string ApplicationVndCurlCar = "application/vnd.curl.car";
        public const string ApplicationVndCurlPcurl = "application/vnd.curl.pcurl";
        public const string ApplicationVndDataVisionRdz = "application/vnd.data-vision.rdz";
        public const string ApplicationVndDenovoFcselayoutLink = "application/vnd.denovo.fcselayout-link";
        public const string ApplicationVndDna = "application/vnd.dna";
        public const string ApplicationVndDolbyMlp = "application/vnd.dolby.mlp";
        public const string ApplicationVndDpgraph = "application/vnd.dpgraph";
        public const string ApplicationVndDreamfactory = "application/vnd.dreamfactory";
        public const string ApplicationVndDynageo = "application/vnd.dynageo";
        public const string ApplicationVndEcowinChart = "application/vnd.ecowin.chart";
        public const string ApplicationVndEnliven = "application/vnd.enliven";
        public const string ApplicationVndEpsonEsf = "application/vnd.epson.esf";
        public const string ApplicationVndEpsonMsf = "application/vnd.epson.msf";
        public const string ApplicationVndEpsonQuickanime = "application/vnd.epson.quickanime";
        public const string ApplicationVndEpsonSalt = "application/vnd.epson.salt";
        public const string ApplicationVndEpsonSsf = "application/vnd.epson.ssf";
        public const string ApplicationVndEszigno3Xml = "application/vnd.eszigno3+xml";
        public const string ApplicationVndEzpixAlbum = "application/vnd.ezpix-album";
        public const string ApplicationVndEzpixPackage = "application/vnd.ezpix-package";
        public const string ApplicationVndFdf = "application/vnd.fdf";
        public const string ApplicationVndFdsnMseed = "application/vnd.fdsn.mseed";
        public const string ApplicationVndFdsnSeed = "application/vnd.fdsn.seed";
        public const string ApplicationVndFlographit = "application/vnd.flographit";
        public const string ApplicationVndFluxtimeClip = "application/vnd.fluxtime.clip";
        public const string ApplicationVndFramemaker = "application/vnd.framemaker";
        public const string ApplicationVndFrogansFnc = "application/vnd.frogans.fnc";
        public const string ApplicationVndFrogansLtf = "application/vnd.frogans.ltf";
        public const string ApplicationVndFscWeblaunch = "application/vnd.fsc.weblaunch";
        public const string ApplicationVndFujitsuOasys = "application/vnd.fujitsu.oasys";
        public const string ApplicationVndFujitsuOasys2 = "application/vnd.fujitsu.oasys2";
        public const string ApplicationVndFujitsuOasys3 = "application/vnd.fujitsu.oasys3";
        public const string ApplicationVndFujitsuOasysgp = "application/vnd.fujitsu.oasysgp";
        public const string ApplicationVndFujitsuOasysprs = "application/vnd.fujitsu.oasysprs";
        public const string ApplicationVndFujixeroxDdd = "application/vnd.fujixerox.ddd";
        public const string ApplicationVndFujixeroxDocuworks = "application/vnd.fujixerox.docuworks";
        public const string ApplicationVndFujixeroxDocuworksBinder = "application/vnd.fujixerox.docuworks.binder";
        public const string ApplicationVndFuzzysheet = "application/vnd.fuzzysheet";
        public const string ApplicationVndGenomatixTuxedo = "application/vnd.genomatix.tuxedo";
        public const string ApplicationVndGeogebraFile = "application/vnd.geogebra.file";
        public const string ApplicationVndGeogebraTool = "application/vnd.geogebra.tool";
        public const string ApplicationVndGeometryExplorer = "application/vnd.geometry-explorer";
        public const string ApplicationVndGmx = "application/vnd.gmx";
        public const string ApplicationVndGoogleEarthKmlXml = "application/vnd.google-earth.kml+xml";
        public const string ApplicationVndGoogleEarthKmz = "application/vnd.google-earth.kmz";
        public const string ApplicationVndGrafeq = "application/vnd.grafeq";
        public const string ApplicationVndGrooveAccount = "application/vnd.groove-account";
        public const string ApplicationVndGrooveHelp = "application/vnd.groove-help";
        public const string ApplicationVndGrooveIdentityMessage = "application/vnd.groove-identity-message";
        public const string ApplicationVndGrooveInjector = "application/vnd.groove-injector";
        public const string ApplicationVndGrooveToolMessage = "application/vnd.groove-tool-message";
        public const string ApplicationVndGrooveToolTemplate = "application/vnd.groove-tool-template";
        public const string ApplicationVndGrooveVcard = "application/vnd.groove-vcard";
        public const string ApplicationVndHandheldEntertainmentXml = "application/vnd.handheld-entertainment+xml";
        public const string ApplicationVndHbci = "application/vnd.hbci";
        public const string ApplicationVndHheLessonPlayer = "application/vnd.hhe.lesson-player";
        public const string ApplicationVndHpHpgl = "application/vnd.hp-hpgl";
        public const string ApplicationVndHpHpid = "application/vnd.hp-hpid";
        public const string ApplicationVndHpHps = "application/vnd.hp-hps";
        public const string ApplicationVndHpJlyt = "application/vnd.hp-jlyt";
        public const string ApplicationVndHpPcl = "application/vnd.hp-pcl";
        public const string ApplicationVndHpPclxl = "application/vnd.hp-pclxl";
        public const string ApplicationVndHydrostatixSofData = "application/vnd.hydrostatix.sof-data";
        public const string ApplicationVndHzn3dCrossword = "application/vnd.hzn-3d-crossword";
        public const string ApplicationVndIbmMinipay = "application/vnd.ibm.minipay";
        public const string ApplicationVndIbmModcap = "application/vnd.ibm.modcap";
        public const string ApplicationVndIbmRightsManagement = "application/vnd.ibm.rights-management";
        public const string ApplicationVndIbmSecureContainer = "application/vnd.ibm.secure-container";
        public const string ApplicationVndIccprofile = "application/vnd.iccprofile";
        public const string ApplicationVndIgloader = "application/vnd.igloader";
        public const string ApplicationVndImmervisionIvp = "application/vnd.immervision-ivp";
        public const string ApplicationVndImmervisionIvu = "application/vnd.immervision-ivu";
        public const string ApplicationVndInterconFormnet = "application/vnd.intercon.formnet";
        public const string ApplicationVndIntuQbo = "application/vnd.intu.qbo";
        public const string ApplicationVndIntuQfx = "application/vnd.intu.qfx";
        public const string ApplicationVndIpunpluggedRcprofile = "application/vnd.ipunplugged.rcprofile";
        public const string ApplicationVndIrepositoryPackageXml = "application/vnd.irepository.package+xml";
        public const string ApplicationVndIsXpr = "application/vnd.is-xpr";
        public const string ApplicationVndJam = "application/vnd.jam";
        public const string ApplicationVndJcpJavameMidletRms = "application/vnd.jcp.javame.midlet-rms";
        public const string ApplicationVndJisp = "application/vnd.jisp";
        public const string ApplicationVndJoostJodaArchive = "application/vnd.joost.joda-archive";
        public const string ApplicationVndKahootz = "application/vnd.kahootz";
        public const string ApplicationVndKdeKarbon = "application/vnd.kde.karbon";
        public const string ApplicationVndKdeKchart = "application/vnd.kde.kchart";
        public const string ApplicationVndKdeKformula = "application/vnd.kde.kformula";
        public const string ApplicationVndKdeKivio = "application/vnd.kde.kivio";
        public const string ApplicationVndKdeKontour = "application/vnd.kde.kontour";
        public const string ApplicationVndKdeKpresenter = "application/vnd.kde.kpresenter";
        public const string ApplicationVndKdeKspread = "application/vnd.kde.kspread";
        public const string ApplicationVndKdeKword = "application/vnd.kde.kword";
        public const string ApplicationVndKenameaapp = "application/vnd.kenameaapp";
        public const string ApplicationVndKidspiration = "application/vnd.kidspiration";
        public const string ApplicationVndKinar = "application/vnd.kinar";
        public const string ApplicationVndKoan = "application/vnd.koan";
        public const string ApplicationVndKodakDescriptor = "application/vnd.kodak-descriptor";
        public const string ApplicationVndLlamagraphicsLifeBalanceDesktop = "application/vnd.llamagraphics.life-balance.desktop";
        public const string ApplicationVndLlamagraphicsLifeBalanceExchangeXml = "application/vnd.llamagraphics.life-balance.exchange+xml";
        public const string ApplicationVndLotus123 = "application/vnd.lotus-1-2-3";
        public const string ApplicationVndLotusApproach = "application/vnd.lotus-approach";
        public const string ApplicationVndLotusFreelance = "application/vnd.lotus-freelance";
        public const string ApplicationVndLotusNotes = "application/vnd.lotus-notes";
        public const string ApplicationVndLotusOrganizer = "application/vnd.lotus-organizer";
        public const string ApplicationVndLotusScreencam = "application/vnd.lotus-screencam";
        public const string ApplicationVndLotusWordpro = "application/vnd.lotus-wordpro";
        public const string ApplicationVndMacportsPortpkg = "application/vnd.macports.portpkg";
        public const string ApplicationVndMcd = "application/vnd.mcd";
        public const string ApplicationVndMedcalcdata = "application/vnd.medcalcdata";
        public const string ApplicationVndMediastationCdkey = "application/vnd.mediastation.cdkey";
        public const string ApplicationVndMfer = "application/vnd.mfer";
        public const string ApplicationVndMfmp = "application/vnd.mfmp";
        public const string ApplicationVndMicrografxFlo = "application/vnd.micrografx.flo";
        public const string ApplicationVndMicrografxIgx = "application/vnd.micrografx.igx";
        public const string ApplicationVndMif = "application/vnd.mif";
        public const string ApplicationVndMobiusDaf = "application/vnd.mobius.daf";
        public const string ApplicationVndMobiusDis = "application/vnd.mobius.dis";
        public const string ApplicationVndMobiusMbk = "application/vnd.mobius.mbk";
        public const string ApplicationVndMobiusMqy = "application/vnd.mobius.mqy";
        public const string ApplicationVndMobiusMsl = "application/vnd.mobius.msl";
        public const string ApplicationVndMobiusPlc = "application/vnd.mobius.plc";
        public const string ApplicationVndMobiusTxf = "application/vnd.mobius.txf";
        public const string ApplicationVndMophunApplication = "application/vnd.mophun.application";
        public const string ApplicationVndMophunCertificate = "application/vnd.mophun.certificate";
        public const string ApplicationVndMozillaXulXml = "application/vnd.mozilla.xul+xml";
        public const string ApplicationVndMsArtgalry = "application/vnd.ms-artgalry";
        public const string ApplicationVndMsCabCompressed = "application/vnd.ms-cab-compressed";
        public const string ApplicationVndMseq = "application/vnd.mseq";
        public const string ApplicationVndMsExcel = "application/vnd.ms-excel";
        public const string ApplicationVndMsExcelAddinMacroenabled12 = "application/vnd.ms-excel.addin.macroenabled.12";
        public const string ApplicationVndMsExcelSheetBinaryMacroenabled12 = "application/vnd.ms-excel.sheet.binary.macroenabled.12";
        public const string ApplicationVndMsExcelSheetMacroenabled12 = "application/vnd.ms-excel.sheet.macroenabled.12";
        public const string ApplicationVndMsExcelTemplateMacroenabled12 = "application/vnd.ms-excel.template.macroenabled.12";
        public const string ApplicationVndMsFontobject = "application/vnd.ms-fontobject";
        public const string ApplicationVndMsHtmlhelp = "application/vnd.ms-htmlhelp";
        public const string ApplicationVndMsIms = "application/vnd.ms-ims";
        public const string ApplicationVndMsLrm = "application/vnd.ms-lrm";
        public const string ApplicationVndMsPkiSeccat = "application/vnd.ms-pki.seccat";
        public const string ApplicationVndMsPkiStl = "application/vnd.ms-pki.stl";
        public const string ApplicationVndMsPowerpoint = "application/vnd.ms-powerpoint";
        public const string ApplicationVndMsPowerpointAddinMacroenabled12 = "application/vnd.ms-powerpoint.addin.macroenabled.12";
        public const string ApplicationVndMsPowerpointPresentationMacroenabled12 = "application/vnd.ms-powerpoint.presentation.macroenabled.12";
        public const string ApplicationVndMsPowerpointSlideMacroenabled12 = "application/vnd.ms-powerpoint.slide.macroenabled.12";
        public const string ApplicationVndMsPowerpointSlideshowMacroenabled12 = "application/vnd.ms-powerpoint.slideshow.macroenabled.12";
        public const string ApplicationVndMsPowerpointTemplateMacroenabled12 = "application/vnd.ms-powerpoint.template.macroenabled.12";
        public const string ApplicationVndMsProject = "application/vnd.ms-project";
        public const string ApplicationVndMsWordDocumentMacroenabled12 = "application/vnd.ms-word.document.macroenabled.12";
        public const string ApplicationVndMsWordTemplateMacroenabled12 = "application/vnd.ms-word.template.macroenabled.12";
        public const string ApplicationVndMsWorks = "application/vnd.ms-works";
        public const string ApplicationVndMsWpl = "application/vnd.ms-wpl";
        public const string ApplicationVndMsXpsdocument = "application/vnd.ms-xpsdocument";
        public const string ApplicationVndMusician = "application/vnd.musician";
        public const string ApplicationVndMuveeStyle = "application/vnd.muvee.style";
        public const string ApplicationVndNeurolanguageNlu = "application/vnd.neurolanguage.nlu";
        public const string ApplicationVndNoblenetDirectory = "application/vnd.noblenet-directory";
        public const string ApplicationVndNoblenetSealer = "application/vnd.noblenet-sealer";
        public const string ApplicationVndNoblenetWeb = "application/vnd.noblenet-web";
        public const string ApplicationVndNokiaNGageData = "application/vnd.nokia.n-gage.data";
        public const string ApplicationVndNokiaNGageSymbianInstall = "application/vnd.nokia.n-gage.symbian.install";
        public const string ApplicationVndNokiaRadioPreset = "application/vnd.nokia.radio-preset";
        public const string ApplicationVndNokiaRadioPresets = "application/vnd.nokia.radio-presets";
        public const string ApplicationVndNovadigmEdm = "application/vnd.novadigm.edm";
        public const string ApplicationVndNovadigmEdx = "application/vnd.novadigm.edx";
        public const string ApplicationVndNovadigmExt = "application/vnd.novadigm.ext";
        public const string ApplicationVndOasisOpendocumentChart = "application/vnd.oasis.opendocument.chart";
        public const string ApplicationVndOasisOpendocumentChartTemplate = "application/vnd.oasis.opendocument.chart-template";
        public const string ApplicationVndOasisOpendocumentDatabase = "application/vnd.oasis.opendocument.database";
        public const string ApplicationVndOasisOpendocumentFormula = "application/vnd.oasis.opendocument.formula";
        public const string ApplicationVndOasisOpendocumentFormulaTemplate = "application/vnd.oasis.opendocument.formula-template";
        public const string ApplicationVndOasisOpendocumentGraphics = "application/vnd.oasis.opendocument.graphics";
        public const string ApplicationVndOasisOpendocumentGraphicsTemplate = "application/vnd.oasis.opendocument.graphics-template";
        public const string ApplicationVndOasisOpendocumentImage = "application/vnd.oasis.opendocument.image";
        public const string ApplicationVndOasisOpendocumentImageTemplate = "application/vnd.oasis.opendocument.image-template";
        public const string ApplicationVndOasisOpendocumentPresentation = "application/vnd.oasis.opendocument.presentation";
        public const string ApplicationVndOasisOpendocumentPresentationTemplate = "application/vnd.oasis.opendocument.presentation-template";
        public const string ApplicationVndOasisOpendocumentSpreadsheet = "application/vnd.oasis.opendocument.spreadsheet";
        public const string ApplicationVndOasisOpendocumentSpreadsheetTemplate = "application/vnd.oasis.opendocument.spreadsheet-template";
        public const string ApplicationVndOasisOpendocumentText = "application/vnd.oasis.opendocument.text";
        public const string ApplicationVndOasisOpendocumentTextMaster = "application/vnd.oasis.opendocument.text-master";
        public const string ApplicationVndOasisOpendocumentTextTemplate = "application/vnd.oasis.opendocument.text-template";
        public const string ApplicationVndOasisOpendocumentTextWeb = "application/vnd.oasis.opendocument.text-web";
        public const string ApplicationVndOlpcSugar = "application/vnd.olpc-sugar";
        public const string ApplicationVndOmaDd2Xml = "application/vnd.oma.dd2+xml";
        public const string ApplicationVndOpenofficeorgExtension = "application/vnd.openofficeorg.extension";
        public const string ApplicationVndOpenxmlformatsOfficedocumentPresentationmlPresentation = "application/vnd.openxmlformats-officedocument.presentationml.presentation";
        public const string ApplicationVndOpenxmlformatsOfficedocumentPresentationmlSlide = "application/vnd.openxmlformats-officedocument.presentationml.slide";
        public const string ApplicationVndOpenxmlformatsOfficedocumentPresentationmlSlideshow = "application/vnd.openxmlformats-officedocument.presentationml.slideshow";
        public const string ApplicationVndOpenxmlformatsOfficedocumentPresentationmlTemplate = "application/vnd.openxmlformats-officedocument.presentationml.template";
        public const string ApplicationVndOpenxmlformatsOfficedocumentSpreadsheetmlSheet = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
        public const string ApplicationVndOpenxmlformatsOfficedocumentSpreadsheetmlTemplate = "application/vnd.openxmlformats-officedocument.spreadsheetml.template";
        public const string ApplicationVndOpenxmlformatsOfficedocumentWordprocessingmlDocument = "application/vnd.openxmlformats-officedocument.wordprocessingml.document";
        public const string ApplicationVndOpenxmlformatsOfficedocumentWordprocessingmlTemplate = "application/vnd.openxmlformats-officedocument.wordprocessingml.template";
        public const string ApplicationVndOsgiDp = "application/vnd.osgi.dp";
        public const string ApplicationVndPalm = "application/vnd.palm";
        public const string ApplicationVndPgFormat = "application/vnd.pg.format";
        public const string ApplicationVndPgOsasli = "application/vnd.pg.osasli";
        public const string ApplicationVndPicsel = "application/vnd.picsel";
        public const string ApplicationVndPocketlearn = "application/vnd.pocketlearn";
        public const string ApplicationVndPowerbuilder6 = "application/vnd.powerbuilder6";
        public const string ApplicationVndPreviewsystemsBox = "application/vnd.previewsystems.box";
        public const string ApplicationVndProteusMagazine = "application/vnd.proteus.magazine";
        public const string ApplicationVndPublishareDeltaTree = "application/vnd.publishare-delta-tree";
        public const string ApplicationVndPviPtid1 = "application/vnd.pvi.ptid1";
        public const string ApplicationVndQuarkQuarkxpress = "application/vnd.quark.quarkxpress";
        public const string ApplicationVndRecordareMusicxml = "application/vnd.recordare.musicxml";
        public const string ApplicationVndRecordareMusicxmlXml = "application/vnd.recordare.musicxml+xml";
        public const string ApplicationVndRimCod = "application/vnd.rim.cod";
        public const string ApplicationVndRnRealmedia = "application/vnd.rn-realmedia";
        public const string ApplicationVndRoute66Link66Xml = "application/vnd.route66.link66+xml";
        public const string ApplicationVndSeemail = "application/vnd.seemail";
        public const string ApplicationVndSema = "application/vnd.sema";
        public const string ApplicationVndSemd = "application/vnd.semd";
        public const string ApplicationVndSemf = "application/vnd.semf";
        public const string ApplicationVndShanaInformedFormdata = "application/vnd.shana.informed.formdata";
        public const string ApplicationVndShanaInformedFormtemplate = "application/vnd.shana.informed.formtemplate";
        public const string ApplicationVndShanaInformedInterchange = "application/vnd.shana.informed.interchange";
        public const string ApplicationVndShanaInformedPackage = "application/vnd.shana.informed.package";
        public const string ApplicationVndSimtechMindmapper = "application/vnd.simtech-mindmapper";
        public const string ApplicationVndSmaf = "application/vnd.smaf";
        public const string ApplicationVndSmartTeacher = "application/vnd.smart.teacher";
        public const string ApplicationVndSolentSdkmXml = "application/vnd.solent.sdkm+xml";
        public const string ApplicationVndSpotfireDxp = "application/vnd.spotfire.dxp";
        public const string ApplicationVndSpotfireSfs = "application/vnd.spotfire.sfs";
        public const string ApplicationVndStardivisionCalc = "application/vnd.stardivision.calc";
        public const string ApplicationVndStardivisionDraw = "application/vnd.stardivision.draw";
        public const string ApplicationVndStardivisionImpress = "application/vnd.stardivision.impress";
        public const string ApplicationVndStardivisionMath = "application/vnd.stardivision.math";
        public const string ApplicationVndStardivisionWriter = "application/vnd.stardivision.writer";
        public const string ApplicationVndStardivisionWriterGlobal = "application/vnd.stardivision.writer-global";
        public const string ApplicationVndSunXmlCalc = "application/vnd.sun.xml.calc";
        public const string ApplicationVndSunXmlCalcTemplate = "application/vnd.sun.xml.calc.template";
        public const string ApplicationVndSunXmlDraw = "application/vnd.sun.xml.draw";
        public const string ApplicationVndSunXmlDrawTemplate = "application/vnd.sun.xml.draw.template";
        public const string ApplicationVndSunXmlImpress = "application/vnd.sun.xml.impress";
        public const string ApplicationVndSunXmlImpressTemplate = "application/vnd.sun.xml.impress.template";
        public const string ApplicationVndSunXmlMath = "application/vnd.sun.xml.math";
        public const string ApplicationVndSunXmlWriter = "application/vnd.sun.xml.writer";
        public const string ApplicationVndSunXmlWriterGlobal = "application/vnd.sun.xml.writer.global";
        public const string ApplicationVndSunXmlWriterTemplate = "application/vnd.sun.xml.writer.template";
        public const string ApplicationVndSusCalendar = "application/vnd.sus-calendar";
        public const string ApplicationVndSvd = "application/vnd.svd";
        public const string ApplicationVndSymbianInstall = "application/vnd.symbian.install";
        public const string ApplicationVndSyncmlDmWbxml = "application/vnd.syncml.dm+wbxml";
        public const string ApplicationVndSyncmlDmXml = "application/vnd.syncml.dm+xml";
        public const string ApplicationVndSyncmlXml = "application/vnd.syncml+xml";
        public const string ApplicationVndTaoIntentModuleArchive = "application/vnd.tao.intent-module-archive";
        public const string ApplicationVndTmobileLivetv = "application/vnd.tmobile-livetv";
        public const string ApplicationVndTridTpt = "application/vnd.trid.tpt";
        public const string ApplicationVndTriscapeMxs = "application/vnd.triscape.mxs";
        public const string ApplicationVndTrueapp = "application/vnd.trueapp";
        public const string ApplicationVndUfdl = "application/vnd.ufdl";
        public const string ApplicationVndUiqTheme = "application/vnd.uiq.theme";
        public const string ApplicationVndUmajin = "application/vnd.umajin";
        public const string ApplicationVndUnity = "application/vnd.unity";
        public const string ApplicationVndUomlXml = "application/vnd.uoml+xml";
        public const string ApplicationVndVcx = "application/vnd.vcx";
        public const string ApplicationVndVisio = "application/vnd.visio";
        public const string ApplicationVndVisionary = "application/vnd.visionary";
        public const string ApplicationVndVsf = "application/vnd.vsf";
        public const string ApplicationVndWapSic = "application/vnd.wap.sic";
        public const string ApplicationVndWapSlc = "application/vnd.wap.slc";
        public const string ApplicationVndWapWbxml = "application/vnd.wap.wbxml";
        public const string ApplicationVndWapWmlc = "application/vnd.wap.wmlc";
        public const string ApplicationVndWapWmlscriptc = "application/vnd.wap.wmlscriptc";
        public const string ApplicationVndWebturbo = "application/vnd.webturbo";
        public const string ApplicationVndWordperfect = "application/vnd.wordperfect";
        public const string ApplicationVndWqd = "application/vnd.wqd";
        public const string ApplicationVndWtStf = "application/vnd.wt.stf";
        public const string ApplicationVndXara = "application/vnd.xara";
        public const string ApplicationVndXfdl = "application/vnd.xfdl";
        public const string ApplicationVndYamahaHvDic = "application/vnd.yamaha.hv-dic";
        public const string ApplicationVndYamahaHvScript = "application/vnd.yamaha.hv-script";
        public const string ApplicationVndYamahaHvVoice = "application/vnd.yamaha.hv-voice";
        public const string ApplicationVndYamahaOpenscoreformat = "application/vnd.yamaha.openscoreformat";
        public const string ApplicationVndYamahaOpenscoreformatOsfpvgXml = "application/vnd.yamaha.openscoreformat.osfpvg+xml";
        public const string ApplicationVndYamahaSmafAudio = "application/vnd.yamaha.smaf-audio";
        public const string ApplicationVndYamahaSmafPhrase = "application/vnd.yamaha.smaf-phrase";
        public const string ApplicationVndYellowriverCustomMenu = "application/vnd.yellowriver-custom-menu";
        public const string ApplicationVndZul = "application/vnd.zul";
        public const string ApplicationVndZzazzDeckXml = "application/vnd.zzazz.deck+xml";
        public const string ApplicationVoicexmlXml = "application/voicexml+xml";
        public const string ApplicationWinhlp = "application/winhlp";
        public const string ApplicationWsdlXml = "application/wsdl+xml";
        public const string ApplicationWspolicyXml = "application/wspolicy+xml";
        public const string ApplicationXAbiword = "application/x-abiword";
        public const string ApplicationXAceCompressed = "application/x-ace-compressed";
        public const string ApplicationXAuthorwareBin = "application/x-authorware-bin";
        public const string ApplicationXAuthorwareMap = "application/x-authorware-map";
        public const string ApplicationXAuthorwareSeg = "application/x-authorware-seg";
        public const string ApplicationXBcpio = "application/x-bcpio";
        public const string ApplicationXBittorrent = "application/x-bittorrent";
        public const string ApplicationXBzip = "application/x-bzip";
        public const string ApplicationXBzip2 = "application/x-bzip2";
        public const string ApplicationXCdlink = "application/x-cdlink";
        public const string ApplicationXChat = "application/x-chat";
        public const string ApplicationXChessPgn = "application/x-chess-pgn";
        public const string ApplicationXCpio = "application/x-cpio";
        public const string ApplicationXCsh = "application/x-csh";
        public const string ApplicationXDebianPackage = "application/x-debian-package";
        public const string ApplicationXDirector = "application/x-director";
        public const string ApplicationXDoom = "application/x-doom";
        public const string ApplicationXDtbncxXml = "application/x-dtbncx+xml";
        public const string ApplicationXDtbookXml = "application/x-dtbook+xml";
        public const string ApplicationXDtbresourceXml = "application/x-dtbresource+xml";
        public const string ApplicationXDvi = "application/x-dvi";
        public const string ApplicationXencXml = "application/xenc+xml";
        public const string ApplicationXFontBdf = "application/x-font-bdf";
        public const string ApplicationXFontGhostscript = "application/x-font-ghostscript";
        public const string ApplicationXFontLinuxPsf = "application/x-font-linux-psf";
        public const string ApplicationXFontOtf = "application/x-font-otf";
        public const string ApplicationXFontPcf = "application/x-font-pcf";
        public const string ApplicationXFontSnf = "application/x-font-snf";
        public const string ApplicationXFontTtf = "application/x-font-ttf";
        public const string ApplicationXFontType1 = "application/x-font-type1";
        public const string ApplicationXFuturesplash = "application/x-futuresplash";
        public const string ApplicationXGnumeric = "application/x-gnumeric";
        public const string ApplicationXGtar = "application/x-gtar";
        public const string ApplicationXGzip = "application/x-gzip";
        public const string ApplicationXHdf = "application/x-hdf";
        public const string ApplicationXhtmlXml = "application/xhtml+xml";
        public const string ApplicationXJavaJnlpFile = "application/x-java-jnlp-file";
        public const string ApplicationXKillustrator = "application/x-killustrator";
        public const string ApplicationXLatex = "application/x-latex";
        public const string ApplicationXml = "application/xml";
        public const string ApplicationXmlDtd = "application/xml-dtd";
        public const string ApplicationXMobipocketEbook = "application/x-mobipocket-ebook";
        public const string ApplicationXMsaccess = "application/x-msaccess";
        public const string ApplicationXMsApplication = "application/x-ms-application";
        public const string ApplicationXMsbinder = "application/x-msbinder";
        public const string ApplicationXMscardfile = "application/x-mscardfile";
        public const string ApplicationXMsclip = "application/x-msclip";
        public const string ApplicationXMsdownload = "application/x-msdownload";
        public const string ApplicationXMsmediaview = "application/x-msmediaview";
        public const string ApplicationXMsmetafile = "application/x-msmetafile";
        public const string ApplicationXMsmoney = "application/x-msmoney";
        public const string ApplicationXMspublisher = "application/x-mspublisher";
        public const string ApplicationXMsschedule = "application/x-msschedule";
        public const string ApplicationXMsterminal = "application/x-msterminal";
        public const string ApplicationXMsWmd = "application/x-ms-wmd";
        public const string ApplicationXMsWmz = "application/x-ms-wmz";
        public const string ApplicationXMswrite = "application/x-mswrite";
        public const string ApplicationXMsXbap = "application/x-ms-xbap";
        public const string ApplicationXNetcdf = "application/x-netcdf";
        public const string ApplicationXopXml = "application/xop+xml";
        public const string ApplicationXPkcs12 = "application/x-pkcs12";
        public const string ApplicationXPkcs7Certificates = "application/x-pkcs7-certificates";
        public const string ApplicationXPkcs7Certreqresp = "application/x-pkcs7-certreqresp";
        public const string ApplicationXPythonCode = "application/x-python-code";
        public const string ApplicationXRarCompressed = "application/x-rar-compressed";
        public const string ApplicationXRpm = "application/x-rpm";
        public const string ApplicationXSh = "application/x-sh";
        public const string ApplicationXShar = "application/x-shar";
        public const string ApplicationXShockwaveFlash = "application/x-shockwave-flash";
        public const string ApplicationXSilverlightApp = "application/x-silverlight-app";
        public const string ApplicationXsltXml = "application/xslt+xml";
        public const string ApplicationXspfXml = "application/xspf+xml";
        public const string ApplicationXStuffit = "application/x-stuffit";
        public const string ApplicationXStuffitx = "application/x-stuffitx";
        public const string ApplicationXSv4cpio = "application/x-sv4cpio";
        public const string ApplicationXSv4crc = "application/x-sv4crc";
        public const string ApplicationXTar = "application/x-tar";
        public const string ApplicationXTcl = "application/x-tcl";
        public const string ApplicationXTex = "application/x-tex";
        public const string ApplicationXTexinfo = "application/x-texinfo";
        public const string ApplicationXTexTfm = "application/x-tex-tfm";
        public const string ApplicationXUstar = "application/x-ustar";
        public const string ApplicationXvXml = "application/xv+xml";
        public const string ApplicationXWaisSource = "application/x-wais-source";
        public const string ApplicationXX509CaCert = "application/x-x509-ca-cert";
        public const string ApplicationXXfig = "application/x-xfig";
        public const string ApplicationXXpinstall = "application/x-xpinstall";
        public const string ApplicationZip = "application/zip";
        public const string AudioAdpcm = "audio/adpcm";
        public const string AudioBasic = "audio/basic";
        public const string AudioMidi = "audio/midi";
        public const string AudioMp4 = "audio/mp4";
        public const string AudioMpeg = "audio/mpeg";
        public const string AudioOgg = "audio/ogg";
        public const string AudioVndDigitalWinds = "audio/vnd.digital-winds";
        public const string AudioVndDts = "audio/vnd.dts";
        public const string AudioVndDtsHd = "audio/vnd.dts.hd";
        public const string AudioVndLucentVoice = "audio/vnd.lucent.voice";
        public const string AudioVndMsPlayreadyMediaPya = "audio/vnd.ms-playready.media.pya";
        public const string AudioVndNueraEcelp4800 = "audio/vnd.nuera.ecelp4800";
        public const string AudioVndNueraEcelp7470 = "audio/vnd.nuera.ecelp7470";
        public const string AudioVndNueraEcelp9600 = "audio/vnd.nuera.ecelp9600";
        public const string AudioXAac = "audio/x-aac";
        public const string AudioXAiff = "audio/x-aiff";
        public const string AudioXMpegurl = "audio/x-mpegurl";
        public const string AudioXMsWax = "audio/x-ms-wax";
        public const string AudioXMsWma = "audio/x-ms-wma";
        public const string AudioXPnRealaudio = "audio/x-pn-realaudio";
        public const string AudioXPnRealaudioPlugin = "audio/x-pn-realaudio-plugin";
        public const string AudioXWav = "audio/x-wav";
        public const string ChemicalXCdx = "chemical/x-cdx";
        public const string ChemicalXCif = "chemical/x-cif";
        public const string ChemicalXCmdf = "chemical/x-cmdf";
        public const string ChemicalXCml = "chemical/x-cml";
        public const string ChemicalXCsml = "chemical/x-csml";
        public const string ChemicalXXyz = "chemical/x-xyz";
        public const string FontWoff2 = "font/woff2";
        public const string ImageBmp = "image/bmp";
        public const string ImageCgm = "image/cgm";
        public const string ImageG3fax = "image/g3fax";
        public const string ImageGif = "image/gif";
        public const string ImageIef = "image/ief";
        public const string ImageJpeg = "image/jpeg";
        public const string ImagePng = "image/png";
        public const string ImagePrsBtif = "image/prs.btif";
        public const string ImageSvgXml = "image/svg+xml";
        public const string ImageTiff = "image/tiff";
        public const string ImageVndAdobePhotoshop = "image/vnd.adobe.photoshop";
        public const string ImageVndDjvu = "image/vnd.djvu";
        public const string ImageVndDwg = "image/vnd.dwg";
        public const string ImageVndDxf = "image/vnd.dxf";
        public const string ImageVndFastbidsheet = "image/vnd.fastbidsheet";
        public const string ImageVndFpx = "image/vnd.fpx";
        public const string ImageVndFst = "image/vnd.fst";
        public const string ImageVndFujixeroxEdmicsMmr = "image/vnd.fujixerox.edmics-mmr";
        public const string ImageVndFujixeroxEdmicsRlc = "image/vnd.fujixerox.edmics-rlc";
        public const string ImageVndMsModi = "image/vnd.ms-modi";
        public const string ImageVndNetFpx = "image/vnd.net-fpx";
        public const string ImageVndWapWbmp = "image/vnd.wap.wbmp";
        public const string ImageVndXiff = "image/vnd.xiff";
        public const string ImageXCmuRaster = "image/x-cmu-raster";
        public const string ImageXCmx = "image/x-cmx";
        public const string ImageXFreehand = "image/x-freehand";
        public const string ImageXIcon = "image/x-icon";
        public const string ImageXPcx = "image/x-pcx";
        public const string ImageXPict = "image/x-pict";
        public const string ImageXPortableAnymap = "image/x-portable-anymap";
        public const string ImageXPortableBitmap = "image/x-portable-bitmap";
        public const string ImageXPortableGraymap = "image/x-portable-graymap";
        public const string ImageXPortablePixmap = "image/x-portable-pixmap";
        public const string ImageXRgb = "image/x-rgb";
        public const string ImageXXbitmap = "image/x-xbitmap";
        public const string ImageXXpixmap = "image/x-xpixmap";
        public const string ImageXXwindowdump = "image/x-xwindowdump";
        public const string MessageRfc822 = "message/rfc822";
        public const string ModelIges = "model/iges";
        public const string ModelMesh = "model/mesh";
        public const string ModelVndDwf = "model/vnd.dwf";
        public const string ModelVndGdl = "model/vnd.gdl";
        public const string ModelVndGtw = "model/vnd.gtw";
        public const string ModelVndMts = "model/vnd.mts";
        public const string ModelVndVtu = "model/vnd.vtu";
        public const string ModelVrml = "model/vrml";
        public const string MultipartAlternative = "multipart/alternative";
        public const string MultipartByteRanges = "multipart/byteranges";
        public const string MultipartDigest = "multipart/digest";
        public const string MultipartFormData = "multipart/form-data";
        public const string MultipartMixed = "multipart/mixed";
        public const string MultipartParallel = "multipart/parallel";
        public const string MultipartRelated = "multipart/related";
        public const string MultipartReport = "multipart/report";
        public const string MultipartSigned = "multipart/signed";
        public const string MultipartEncrypted = "multipart/encrypted";
        public const string TextCalendar = "text/calendar";
        public const string TextCss = "text/css";
        public const string TextCsv = "text/csv";
        public const string TextHtml = "text/html";
        public const string TextPlain = "text/plain";
        public const string TextPrsLinesTag = "text/prs.lines.tag";
        public const string TextRichtext = "text/richtext";
        public const string TextSgml = "text/sgml";
        public const string TextTabSeparatedValues = "text/tab-separated-values";
        public const string TextTroff = "text/troff";
        public const string TextUriList = "text/uri-list";
        public const string TextVndCurl = "text/vnd.curl";
        public const string TextVndCurlDcurl = "text/vnd.curl.dcurl";
        public const string TextVndCurlMcurl = "text/vnd.curl.mcurl";
        public const string TextVndCurlScurl = "text/vnd.curl.scurl";
        public const string TextVndFly = "text/vnd.fly";
        public const string TextVndFmiFlexstor = "text/vnd.fmi.flexstor";
        public const string TextVndGraphviz = "text/vnd.graphviz";
        public const string TextVndIn3d3dml = "text/vnd.in3d.3dml";
        public const string TextVndIn3dSpot = "text/vnd.in3d.spot";
        public const string TextVndSunJ2meAppDescriptor = "text/vnd.sun.j2me.app-descriptor";
        public const string TextVndWapSi = "text/vnd.wap.si";
        public const string TextVndWapSl = "text/vnd.wap.sl";
        public const string TextVndWapWml = "text/vnd.wap.wml";
        public const string TextVndWapWmlscript = "text/vnd.wap.wmlscript";
        public const string TextXAsm = "text/x-asm";
        public const string TextXC = "text/x-c";
        public const string TextXFortran = "text/x-fortran";
        public const string TextXJavaSource = "text/x-java-source";
        public const string TextXPascal = "text/x-pascal";
        public const string TextXPython = "text/x-python";
        public const string TextXSetext = "text/x-setext";
        public const string TextXUuencode = "text/x-uuencode";
        public const string TextXVcalendar = "text/x-vcalendar";
        public const string TextXVcard = "text/x-vcard";
        public const string Video3gpp = "video/3gpp";
        public const string Video3gpp2 = "video/3gpp2";
        public const string VideoH261 = "video/h261";
        public const string VideoH263 = "video/h263";
        public const string VideoH264 = "video/h264";
        public const string VideoJpeg = "video/jpeg";
        public const string VideoJpm = "video/jpm";
        public const string VideoMj2 = "video/mj2";
        public const string VideoMp4 = "video/mp4";
        public const string VideoMpeg = "video/mpeg";
        public const string VideoOgg = "video/ogg";
        public const string VideoQuicktime = "video/quicktime";
        public const string VideoVndFvt = "video/vnd.fvt";
        public const string VideoVndMpegurl = "video/vnd.mpegurl";
        public const string VideoVndMsPlayreadyMediaPyv = "video/vnd.ms-playready.media.pyv";
        public const string VideoVndVivo = "video/vnd.vivo";
        public const string VideoXF4v = "video/x-f4v";
        public const string VideoXFli = "video/x-fli";
        public const string VideoXFlv = "video/x-flv";
        public const string VideoXM4v = "video/x-m4v";
        public const string VideoXMsAsf = "video/x-ms-asf";
        public const string VideoXMsvideo = "video/x-msvideo";
        public const string VideoXMsWm = "video/x-ms-wm";
        public const string VideoXMsWmv = "video/x-ms-wmv";
        public const string VideoXMsWmx = "video/x-ms-wmx";
        public const string VideoXMsWvx = "video/x-ms-wvx";
        public const string VideoXSgiMovie = "video/x-sgi-movie";
        public const string XConferenceXCooltalk = "x-conference/x-cooltalk";

        public static string GetMimeTypeFromExtension(this string extension)
        {
            if (extension.EqualsUncase(".123")) return ApplicationVndLotus123;
            if (extension.EqualsUncase(".3dml")) return TextVndIn3d3dml;
            if (extension.EqualsUncase(".3g2")) return Video3gpp2;
            if (extension.EqualsUncase(".3gp")) return Video3gpp;
            if (extension.EqualsUncase(".a")) return ApplicationOctetStream;
            if (extension.EqualsUncase(".aab")) return ApplicationXAuthorwareBin;
            if (extension.EqualsUncase(".aac")) return AudioXAac;
            if (extension.EqualsUncase(".aam")) return ApplicationXAuthorwareMap;
            if (extension.EqualsUncase(".aas")) return ApplicationXAuthorwareSeg;
            if (extension.EqualsUncase(".abw")) return ApplicationXAbiword;
            if (extension.EqualsUncase(".acc")) return ApplicationVndAmericandynamicsAcc;
            if (extension.EqualsUncase(".ace")) return ApplicationXAceCompressed;
            if (extension.EqualsUncase(".acu")) return ApplicationVndAcucobol;
            if (extension.EqualsUncase(".acutc")) return ApplicationVndAcucorp;
            if (extension.EqualsUncase(".adp")) return AudioAdpcm;
            if (extension.EqualsUncase(".aep")) return ApplicationVndAudiograph;
            if (extension.EqualsUncase(".afm")) return ApplicationXFontType1;
            if (extension.EqualsUncase(".afp")) return ApplicationVndIbmModcap;
            if (extension.EqualsUncase(".ai")) return ApplicationPostscript;
            if (extension.EqualsUncase(".aif")) return AudioXAiff;
            if (extension.EqualsUncase(".aifc")) return AudioXAiff;
            if (extension.EqualsUncase(".aiff")) return AudioXAiff;
            if (extension.EqualsUncase(".air")) return ApplicationVndAdobeAirApplicationInstallerPackageZip;
            if (extension.EqualsUncase(".ami")) return ApplicationVndAmigaAmi;
            if (extension.EqualsUncase(".apk")) return ApplicationVndAndroidPackageArchive;
            if (extension.EqualsUncase(".application")) return ApplicationXMsApplication;
            if (extension.EqualsUncase(".apr")) return ApplicationVndLotusApproach;
            if (extension.EqualsUncase(".asc")) return ApplicationPgpSignature;
            if (extension.EqualsUncase(".asf")) return VideoXMsAsf;
            if (extension.EqualsUncase(".asm")) return TextXAsm;
            if (extension.EqualsUncase(".aso")) return ApplicationVndAccpacSimplyAso;
            if (extension.EqualsUncase(".asx")) return VideoXMsAsf;
            if (extension.EqualsUncase(".atc")) return ApplicationVndAcucorp;
            if (extension.EqualsUncase(".atom")) return ApplicationAtomXml;
            if (extension.EqualsUncase(".atomcat")) return ApplicationAtomcatXml;
            if (extension.EqualsUncase(".atomsvc")) return ApplicationAtomsvcXml;
            if (extension.EqualsUncase(".atx")) return ApplicationVndAntixGameComponent;
            if (extension.EqualsUncase(".au")) return AudioBasic;
            if (extension.EqualsUncase(".avi")) return VideoXMsvideo;
            if (extension.EqualsUncase(".aw")) return ApplicationApplixware;
            if (extension.EqualsUncase(".azf")) return ApplicationVndAirzipFilesecureAzf;
            if (extension.EqualsUncase(".azs")) return ApplicationVndAirzipFilesecureAzs;
            if (extension.EqualsUncase(".azw")) return ApplicationVndAmazonEbook;
            if (extension.EqualsUncase(".bat")) return ApplicationXMsdownload;
            if (extension.EqualsUncase(".bcpio")) return ApplicationXBcpio;
            if (extension.EqualsUncase(".bdf")) return ApplicationXFontBdf;
            if (extension.EqualsUncase(".bdm")) return ApplicationVndSyncmlDmWbxml;
            if (extension.EqualsUncase(".bh2")) return ApplicationVndFujitsuOasysprs;
            if (extension.EqualsUncase(".bin")) return ApplicationOctetStream;
            if (extension.EqualsUncase(".bmi")) return ApplicationVndBmi;
            if (extension.EqualsUncase(".bmp")) return ImageBmp;
            if (extension.EqualsUncase(".book")) return ApplicationVndFramemaker;
            if (extension.EqualsUncase(".box")) return ApplicationVndPreviewsystemsBox;
            if (extension.EqualsUncase(".boz")) return ApplicationXBzip2;
            if (extension.EqualsUncase(".bpk")) return ApplicationOctetStream;
            if (extension.EqualsUncase(".btif")) return ImagePrsBtif;
            if (extension.EqualsUncase(".bz")) return ApplicationXBzip;
            if (extension.EqualsUncase(".bz2")) return ApplicationXBzip2;
            if (extension.EqualsUncase(".c")) return TextXC;
            if (extension.EqualsUncase(".c4d")) return ApplicationVndClonkC4group;
            if (extension.EqualsUncase(".c4f")) return ApplicationVndClonkC4group;
            if (extension.EqualsUncase(".c4g")) return ApplicationVndClonkC4group;
            if (extension.EqualsUncase(".c4p")) return ApplicationVndClonkC4group;
            if (extension.EqualsUncase(".c4u")) return ApplicationVndClonkC4group;
            if (extension.EqualsUncase(".cab")) return ApplicationVndMsCabCompressed;
            if (extension.EqualsUncase(".car")) return ApplicationVndCurlCar;
            if (extension.EqualsUncase(".cat")) return ApplicationVndMsPkiSeccat;
            if (extension.EqualsUncase(".cc")) return TextXC;
            if (extension.EqualsUncase(".cct")) return ApplicationXDirector;
            if (extension.EqualsUncase(".ccxml")) return ApplicationCcxmlXml;
            if (extension.EqualsUncase(".cdbcmsg")) return ApplicationVndContactCmsg;
            if (extension.EqualsUncase(".cdf")) return ApplicationXNetcdf;
            if (extension.EqualsUncase(".cdkey")) return ApplicationVndMediastationCdkey;
            if (extension.EqualsUncase(".cdx")) return ChemicalXCdx;
            if (extension.EqualsUncase(".cdxml")) return ApplicationVndChemdrawXml;
            if (extension.EqualsUncase(".cdy")) return ApplicationVndCinderella;
            if (extension.EqualsUncase(".cer")) return ApplicationPkixCert;
            if (extension.EqualsUncase(".cgm")) return ImageCgm;
            if (extension.EqualsUncase(".chat")) return ApplicationXChat;
            if (extension.EqualsUncase(".chm")) return ApplicationVndMsHtmlhelp;
            if (extension.EqualsUncase(".chrt")) return ApplicationVndKdeKchart;
            if (extension.EqualsUncase(".cif")) return ChemicalXCif;
            if (extension.EqualsUncase(".cii")) return ApplicationVndAnserWebCertificateIssueInitiation;
            if (extension.EqualsUncase(".cil")) return ApplicationVndMsArtgalry;
            if (extension.EqualsUncase(".cla")) return ApplicationVndClaymore;
            if (extension.EqualsUncase(".class")) return ApplicationJavaVm;
            if (extension.EqualsUncase(".clkk")) return ApplicationVndCrickClickerKeyboard;
            if (extension.EqualsUncase(".clkp")) return ApplicationVndCrickClickerPalette;
            if (extension.EqualsUncase(".clkt")) return ApplicationVndCrickClickerTemplate;
            if (extension.EqualsUncase(".clkw")) return ApplicationVndCrickClickerWordbank;
            if (extension.EqualsUncase(".clkx")) return ApplicationVndCrickClicker;
            if (extension.EqualsUncase(".clp")) return ApplicationXMsclip;
            if (extension.EqualsUncase(".cmc")) return ApplicationVndCosmocaller;
            if (extension.EqualsUncase(".cmdf")) return ChemicalXCmdf;
            if (extension.EqualsUncase(".cml")) return ChemicalXCml;
            if (extension.EqualsUncase(".cmp")) return ApplicationVndYellowriverCustomMenu;
            if (extension.EqualsUncase(".cmx")) return ImageXCmx;
            if (extension.EqualsUncase(".cod")) return ApplicationVndRimCod;
            if (extension.EqualsUncase(".com")) return ApplicationXMsdownload;
            if (extension.EqualsUncase(".conf")) return TextPlain;
            if (extension.EqualsUncase(".cpio")) return ApplicationXCpio;
            if (extension.EqualsUncase(".cpp")) return TextXC;
            if (extension.EqualsUncase(".cpt")) return ApplicationMacCompactpro;
            if (extension.EqualsUncase(".crd")) return ApplicationXMscardfile;
            if (extension.EqualsUncase(".crl")) return ApplicationPkixCrl;
            if (extension.EqualsUncase(".crt")) return ApplicationXX509CaCert;
            if (extension.EqualsUncase(".csh")) return ApplicationXCsh;
            if (extension.EqualsUncase(".csml")) return ChemicalXCsml;
            if (extension.EqualsUncase(".csp")) return ApplicationVndCommonspace;
            if (extension.EqualsUncase(".css")) return TextCss;
            if (extension.EqualsUncase(".cst")) return ApplicationXDirector;
            if (extension.EqualsUncase(".csv")) return TextCsv;
            if (extension.EqualsUncase(".cu")) return ApplicationCuSeeme;
            if (extension.EqualsUncase(".curl")) return TextVndCurl;
            if (extension.EqualsUncase(".cww")) return ApplicationPrsCww;
            if (extension.EqualsUncase(".cxt")) return ApplicationXDirector;
            if (extension.EqualsUncase(".cxx")) return TextXC;
            if (extension.EqualsUncase(".daf")) return ApplicationVndMobiusDaf;
            if (extension.EqualsUncase(".dataless")) return ApplicationVndFdsnSeed;
            if (extension.EqualsUncase(".davmount")) return ApplicationDavmountXml;
            if (extension.EqualsUncase(".dcr")) return ApplicationXDirector;
            if (extension.EqualsUncase(".dcurl")) return TextVndCurlDcurl;
            if (extension.EqualsUncase(".dd2")) return ApplicationVndOmaDd2Xml;
            if (extension.EqualsUncase(".ddd")) return ApplicationVndFujixeroxDdd;
            if (extension.EqualsUncase(".deb")) return ApplicationXDebianPackage;
            if (extension.EqualsUncase(".def")) return TextPlain;
            if (extension.EqualsUncase(".deploy")) return ApplicationOctetStream;
            if (extension.EqualsUncase(".der")) return ApplicationXX509CaCert;
            if (extension.EqualsUncase(".dfac")) return ApplicationVndDreamfactory;
            if (extension.EqualsUncase(".dic")) return TextXC;
            if (extension.EqualsUncase(".diff")) return TextPlain;
            if (extension.EqualsUncase(".dir")) return ApplicationXDirector;
            if (extension.EqualsUncase(".dis")) return ApplicationVndMobiusDis;
            if (extension.EqualsUncase(".dist")) return ApplicationOctetStream;
            if (extension.EqualsUncase(".distz")) return ApplicationOctetStream;
            if (extension.EqualsUncase(".djv")) return ImageVndDjvu;
            if (extension.EqualsUncase(".djvu")) return ImageVndDjvu;
            if (extension.EqualsUncase(".dll")) return ApplicationXMsdownload;
            if (extension.EqualsUncase(".dmg")) return ApplicationOctetStream;
            if (extension.EqualsUncase(".dms")) return ApplicationOctetStream;
            if (extension.EqualsUncase(".dna")) return ApplicationVndDna;
            if (extension.EqualsUncase(".doc")) return ApplicationMsword;
            if (extension.EqualsUncase(".docm")) return ApplicationVndMsWordDocumentMacroenabled12;
            if (extension.EqualsUncase(".docx")) return ApplicationVndOpenxmlformatsOfficedocumentWordprocessingmlDocument;
            if (extension.EqualsUncase(".dot")) return ApplicationMsword;
            if (extension.EqualsUncase(".dotm")) return ApplicationVndMsWordTemplateMacroenabled12;
            if (extension.EqualsUncase(".dotx")) return ApplicationVndOpenxmlformatsOfficedocumentWordprocessingmlTemplate;
            if (extension.EqualsUncase(".dp")) return ApplicationVndOsgiDp;
            if (extension.EqualsUncase(".dpg")) return ApplicationVndDpgraph;
            if (extension.EqualsUncase(".dsc")) return TextPrsLinesTag;
            if (extension.EqualsUncase(".dtb")) return ApplicationXDtbookXml;
            if (extension.EqualsUncase(".dtd")) return ApplicationXmlDtd;
            if (extension.EqualsUncase(".dts")) return AudioVndDts;
            if (extension.EqualsUncase(".dtshd")) return AudioVndDtsHd;
            if (extension.EqualsUncase(".dump")) return ApplicationOctetStream;
            if (extension.EqualsUncase(".dvi")) return ApplicationXDvi;
            if (extension.EqualsUncase(".dwf")) return ModelVndDwf;
            if (extension.EqualsUncase(".dwg")) return ImageVndDwg;
            if (extension.EqualsUncase(".dxf")) return ImageVndDxf;
            if (extension.EqualsUncase(".dxp")) return ApplicationVndSpotfireDxp;
            if (extension.EqualsUncase(".dxr")) return ApplicationXDirector;
            if (extension.EqualsUncase(".ecelp4800")) return AudioVndNueraEcelp4800;
            if (extension.EqualsUncase(".ecelp7470")) return AudioVndNueraEcelp7470;
            if (extension.EqualsUncase(".ecelp9600")) return AudioVndNueraEcelp9600;
            if (extension.EqualsUncase(".ecma")) return ApplicationEcmascript;
            if (extension.EqualsUncase(".edm")) return ApplicationVndNovadigmEdm;
            if (extension.EqualsUncase(".edx")) return ApplicationVndNovadigmEdx;
            if (extension.EqualsUncase(".efif")) return ApplicationVndPicsel;
            if (extension.EqualsUncase(".ei6")) return ApplicationVndPgOsasli;
            if (extension.EqualsUncase(".elc")) return ApplicationOctetStream;
            if (extension.EqualsUncase(".eml")) return MessageRfc822;
            if (extension.EqualsUncase(".emma")) return ApplicationEmmaXml;
            if (extension.EqualsUncase(".eol")) return AudioVndDigitalWinds;
            if (extension.EqualsUncase(".eot")) return ApplicationVndMsFontobject;
            if (extension.EqualsUncase(".eps")) return ApplicationPostscript;
            if (extension.EqualsUncase(".epub")) return ApplicationEpubZip;
            if (extension.EqualsUncase(".es3")) return ApplicationVndEszigno3Xml;
            if (extension.EqualsUncase(".esf")) return ApplicationVndEpsonEsf;
            if (extension.EqualsUncase(".et3")) return ApplicationVndEszigno3Xml;
            if (extension.EqualsUncase(".etx")) return TextXSetext;
            if (extension.EqualsUncase(".exe")) return ApplicationXMsdownload;
            if (extension.EqualsUncase(".ext")) return ApplicationVndNovadigmExt;
            if (extension.EqualsUncase(".ez")) return ApplicationAndrewInset;
            if (extension.EqualsUncase(".ez2")) return ApplicationVndEzpixAlbum;
            if (extension.EqualsUncase(".ez3")) return ApplicationVndEzpixPackage;
            if (extension.EqualsUncase(".f")) return TextXFortran;
            if (extension.EqualsUncase(".f4v")) return VideoXF4v;
            if (extension.EqualsUncase(".f77")) return TextXFortran;
            if (extension.EqualsUncase(".f90")) return TextXFortran;
            if (extension.EqualsUncase(".fbs")) return ImageVndFastbidsheet;
            if (extension.EqualsUncase(".fdf")) return ApplicationVndFdf;
            if (extension.EqualsUncase(".fe_launch")) return ApplicationVndDenovoFcselayoutLink;
            if (extension.EqualsUncase(".fg5")) return ApplicationVndFujitsuOasysgp;
            if (extension.EqualsUncase(".fgd")) return ApplicationXDirector;
            if (extension.EqualsUncase(".fh")) return ImageXFreehand;
            if (extension.EqualsUncase(".fh4")) return ImageXFreehand;
            if (extension.EqualsUncase(".fh5")) return ImageXFreehand;
            if (extension.EqualsUncase(".fh7")) return ImageXFreehand;
            if (extension.EqualsUncase(".fhc")) return ImageXFreehand;
            if (extension.EqualsUncase(".fig")) return ApplicationXXfig;
            if (extension.EqualsUncase(".fli")) return VideoXFli;
            if (extension.EqualsUncase(".flo")) return ApplicationVndMicrografxFlo;
            if (extension.EqualsUncase(".flv")) return VideoXFlv;
            if (extension.EqualsUncase(".flw")) return ApplicationVndKdeKivio;
            if (extension.EqualsUncase(".flx")) return TextVndFmiFlexstor;
            if (extension.EqualsUncase(".fly")) return TextVndFly;
            if (extension.EqualsUncase(".fm")) return ApplicationVndFramemaker;
            if (extension.EqualsUncase(".fnc")) return ApplicationVndFrogansFnc;
            if (extension.EqualsUncase(".for")) return TextXFortran;
            if (extension.EqualsUncase(".fpx")) return ImageVndFpx;
            if (extension.EqualsUncase(".frame")) return ApplicationVndFramemaker;
            if (extension.EqualsUncase(".fsc")) return ApplicationVndFscWeblaunch;
            if (extension.EqualsUncase(".fst")) return ImageVndFst;
            if (extension.EqualsUncase(".ftc")) return ApplicationVndFluxtimeClip;
            if (extension.EqualsUncase(".fti")) return ApplicationVndAnserWebFundsTransferInitiation;
            if (extension.EqualsUncase(".fvt")) return VideoVndFvt;
            if (extension.EqualsUncase(".fzs")) return ApplicationVndFuzzysheet;
            if (extension.EqualsUncase(".g3")) return ImageG3fax;
            if (extension.EqualsUncase(".gac")) return ApplicationVndGrooveAccount;
            if (extension.EqualsUncase(".gdl")) return ModelVndGdl;
            if (extension.EqualsUncase(".geo")) return ApplicationVndDynageo;
            if (extension.EqualsUncase(".gex")) return ApplicationVndGeometryExplorer;
            if (extension.EqualsUncase(".ggb")) return ApplicationVndGeogebraFile;
            if (extension.EqualsUncase(".ggt")) return ApplicationVndGeogebraTool;
            if (extension.EqualsUncase(".ghf")) return ApplicationVndGrooveHelp;
            if (extension.EqualsUncase(".gif")) return ImageGif;
            if (extension.EqualsUncase(".gim")) return ApplicationVndGrooveIdentityMessage;
            if (extension.EqualsUncase(".gmx")) return ApplicationVndGmx;
            if (extension.EqualsUncase(".gnumeric")) return ApplicationXGnumeric;
            if (extension.EqualsUncase(".gph")) return ApplicationVndFlographit;
            if (extension.EqualsUncase(".gqf")) return ApplicationVndGrafeq;
            if (extension.EqualsUncase(".gqs")) return ApplicationVndGrafeq;
            if (extension.EqualsUncase(".gram")) return ApplicationSrgs;
            if (extension.EqualsUncase(".gre")) return ApplicationVndGeometryExplorer;
            if (extension.EqualsUncase(".grv")) return ApplicationVndGrooveInjector;
            if (extension.EqualsUncase(".grxml")) return ApplicationSrgsXml;
            if (extension.EqualsUncase(".gsf")) return ApplicationXFontGhostscript;
            if (extension.EqualsUncase(".gtar")) return ApplicationXGtar;
            if (extension.EqualsUncase(".gtm")) return ApplicationVndGrooveToolMessage;
            if (extension.EqualsUncase(".gtw")) return ModelVndGtw;
            if (extension.EqualsUncase(".gv")) return TextVndGraphviz;
            if (extension.EqualsUncase(".gz")) return ApplicationXGzip;
            if (extension.EqualsUncase(".h")) return TextXC;
            if (extension.EqualsUncase(".h261")) return VideoH261;
            if (extension.EqualsUncase(".h263")) return VideoH263;
            if (extension.EqualsUncase(".h264")) return VideoH264;
            if (extension.EqualsUncase(".hbci")) return ApplicationVndHbci;
            if (extension.EqualsUncase(".hdf")) return ApplicationXHdf;
            if (extension.EqualsUncase(".hh")) return TextXC;
            if (extension.EqualsUncase(".hlp")) return ApplicationWinhlp;
            if (extension.EqualsUncase(".hpgl")) return ApplicationVndHpHpgl;
            if (extension.EqualsUncase(".hpid")) return ApplicationVndHpHpid;
            if (extension.EqualsUncase(".hps")) return ApplicationVndHpHps;
            if (extension.EqualsUncase(".hqx")) return ApplicationMacBinhex40;
            if (extension.EqualsUncase(".htke")) return ApplicationVndKenameaapp;
            if (extension.EqualsUncase(".htm")) return TextHtml;
            if (extension.EqualsUncase(".html")) return TextHtml;
            if (extension.EqualsUncase(".hvd")) return ApplicationVndYamahaHvDic;
            if (extension.EqualsUncase(".hvp")) return ApplicationVndYamahaHvVoice;
            if (extension.EqualsUncase(".hvs")) return ApplicationVndYamahaHvScript;
            if (extension.EqualsUncase(".icc")) return ApplicationVndIccprofile;
            if (extension.EqualsUncase(".ice")) return XConferenceXCooltalk;
            if (extension.EqualsUncase(".icm")) return ApplicationVndIccprofile;
            if (extension.EqualsUncase(".ico")) return ImageXIcon;
            if (extension.EqualsUncase(".ics")) return TextCalendar;
            if (extension.EqualsUncase(".ief")) return ImageIef;
            if (extension.EqualsUncase(".ifb")) return TextCalendar;
            if (extension.EqualsUncase(".ifm")) return ApplicationVndShanaInformedFormdata;
            if (extension.EqualsUncase(".iges")) return ModelIges;
            if (extension.EqualsUncase(".igl")) return ApplicationVndIgloader;
            if (extension.EqualsUncase(".igs")) return ModelIges;
            if (extension.EqualsUncase(".igx")) return ApplicationVndMicrografxIgx;
            if (extension.EqualsUncase(".iif")) return ApplicationVndShanaInformedInterchange;
            if (extension.EqualsUncase(".imp")) return ApplicationVndAccpacSimplyImp;
            if (extension.EqualsUncase(".ims")) return ApplicationVndMsIms;
            if (extension.EqualsUncase(".in")) return TextPlain;
            if (extension.EqualsUncase(".ipk")) return ApplicationVndShanaInformedPackage;
            if (extension.EqualsUncase(".irm")) return ApplicationVndIbmRightsManagement;
            if (extension.EqualsUncase(".irp")) return ApplicationVndIrepositoryPackageXml;
            if (extension.EqualsUncase(".iso")) return ApplicationOctetStream;
            if (extension.EqualsUncase(".itp")) return ApplicationVndShanaInformedFormtemplate;
            if (extension.EqualsUncase(".ivp")) return ApplicationVndImmervisionIvp;
            if (extension.EqualsUncase(".ivu")) return ApplicationVndImmervisionIvu;
            if (extension.EqualsUncase(".jad")) return TextVndSunJ2meAppDescriptor;
            if (extension.EqualsUncase(".jam")) return ApplicationVndJam;
            if (extension.EqualsUncase(".jar")) return ApplicationJavaArchive;
            if (extension.EqualsUncase(".java")) return TextXJavaSource;
            if (extension.EqualsUncase(".jisp")) return ApplicationVndJisp;
            if (extension.EqualsUncase(".jlt")) return ApplicationVndHpJlyt;
            if (extension.EqualsUncase(".jnlp")) return ApplicationXJavaJnlpFile;
            if (extension.EqualsUncase(".joda")) return ApplicationVndJoostJodaArchive;
            if (extension.EqualsUncase(".jpe")) return ImageJpeg;
            if (extension.EqualsUncase(".jpeg")) return ImageJpeg;
            if (extension.EqualsUncase(".jpg")) return ImageJpeg;
            if (extension.EqualsUncase(".jpgm")) return VideoJpm;
            if (extension.EqualsUncase(".jpgv")) return VideoJpeg;
            if (extension.EqualsUncase(".jpm")) return VideoJpm;
            if (extension.EqualsUncase(".js")) return ApplicationJavascript;
            if (extension.EqualsUncase(".json")) return ApplicationJson;
            if (extension.EqualsUncase(".kar")) return AudioMidi;
            if (extension.EqualsUncase(".karbon")) return ApplicationVndKdeKarbon;
            if (extension.EqualsUncase(".kfo")) return ApplicationVndKdeKformula;
            if (extension.EqualsUncase(".kia")) return ApplicationVndKidspiration;
            if (extension.EqualsUncase(".kil")) return ApplicationXKillustrator;
            if (extension.EqualsUncase(".kml")) return ApplicationVndGoogleEarthKmlXml;
            if (extension.EqualsUncase(".kmz")) return ApplicationVndGoogleEarthKmz;
            if (extension.EqualsUncase(".kne")) return ApplicationVndKinar;
            if (extension.EqualsUncase(".knp")) return ApplicationVndKinar;
            if (extension.EqualsUncase(".kon")) return ApplicationVndKdeKontour;
            if (extension.EqualsUncase(".kpr")) return ApplicationVndKdeKpresenter;
            if (extension.EqualsUncase(".kpt")) return ApplicationVndKdeKpresenter;
            if (extension.EqualsUncase(".ksh")) return TextPlain;
            if (extension.EqualsUncase(".ksp")) return ApplicationVndKdeKspread;
            if (extension.EqualsUncase(".ktr")) return ApplicationVndKahootz;
            if (extension.EqualsUncase(".ktz")) return ApplicationVndKahootz;
            if (extension.EqualsUncase(".kwd")) return ApplicationVndKdeKword;
            if (extension.EqualsUncase(".kwt")) return ApplicationVndKdeKword;
            if (extension.EqualsUncase(".latex")) return ApplicationXLatex;
            if (extension.EqualsUncase(".lbd")) return ApplicationVndLlamagraphicsLifeBalanceDesktop;
            if (extension.EqualsUncase(".lbe")) return ApplicationVndLlamagraphicsLifeBalanceExchangeXml;
            if (extension.EqualsUncase(".les")) return ApplicationVndHheLessonPlayer;
            if (extension.EqualsUncase(".lha")) return ApplicationOctetStream;
            if (extension.EqualsUncase(".link66")) return ApplicationVndRoute66Link66Xml;
            if (extension.EqualsUncase(".list")) return TextPlain;
            if (extension.EqualsUncase(".list3820")) return ApplicationVndIbmModcap;
            if (extension.EqualsUncase(".listafp")) return ApplicationVndIbmModcap;
            if (extension.EqualsUncase(".log")) return TextPlain;
            if (extension.EqualsUncase(".lostxml")) return ApplicationLostXml;
            if (extension.EqualsUncase(".lrf")) return ApplicationOctetStream;
            if (extension.EqualsUncase(".lrm")) return ApplicationVndMsLrm;
            if (extension.EqualsUncase(".ltf")) return ApplicationVndFrogansLtf;
            if (extension.EqualsUncase(".lvp")) return AudioVndLucentVoice;
            if (extension.EqualsUncase(".lwp")) return ApplicationVndLotusWordpro;
            if (extension.EqualsUncase(".lzh")) return ApplicationOctetStream;
            if (extension.EqualsUncase(".m13")) return ApplicationXMsmediaview;
            if (extension.EqualsUncase(".m14")) return ApplicationXMsmediaview;
            if (extension.EqualsUncase(".m1v")) return VideoMpeg;
            if (extension.EqualsUncase(".m2a")) return AudioMpeg;
            if (extension.EqualsUncase(".m2v")) return VideoMpeg;
            if (extension.EqualsUncase(".m3a")) return AudioMpeg;
            if (extension.EqualsUncase(".m3u")) return AudioXMpegurl;
            if (extension.EqualsUncase(".m4u")) return VideoVndMpegurl;
            if (extension.EqualsUncase(".m4v")) return VideoXM4v;
            if (extension.EqualsUncase(".ma")) return ApplicationMathematica;
            if (extension.EqualsUncase(".mag")) return ApplicationVndEcowinChart;
            if (extension.EqualsUncase(".maker")) return ApplicationVndFramemaker;
            if (extension.EqualsUncase(".man")) return TextTroff;
            if (extension.EqualsUncase(".mathml")) return ApplicationMathmlXml;
            if (extension.EqualsUncase(".mb")) return ApplicationMathematica;
            if (extension.EqualsUncase(".mbk")) return ApplicationVndMobiusMbk;
            if (extension.EqualsUncase(".mbox")) return ApplicationMbox;
            if (extension.EqualsUncase(".mc1")) return ApplicationVndMedcalcdata;
            if (extension.EqualsUncase(".mcd")) return ApplicationVndMcd;
            if (extension.EqualsUncase(".mcurl")) return TextVndCurlMcurl;
            if (extension.EqualsUncase(".mdb")) return ApplicationXMsaccess;
            if (extension.EqualsUncase(".mdi")) return ImageVndMsModi;
            if (extension.EqualsUncase(".me")) return TextTroff;
            if (extension.EqualsUncase(".mesh")) return ModelMesh;
            if (extension.EqualsUncase(".mfm")) return ApplicationVndMfmp;
            if (extension.EqualsUncase(".mgz")) return ApplicationVndProteusMagazine;
            if (extension.EqualsUncase(".mht")) return MessageRfc822;
            if (extension.EqualsUncase(".mhtml")) return MessageRfc822;
            if (extension.EqualsUncase(".mid")) return AudioMidi;
            if (extension.EqualsUncase(".midi")) return AudioMidi;
            if (extension.EqualsUncase(".mif")) return ApplicationVndMif;
            if (extension.EqualsUncase(".mime")) return MessageRfc822;
            if (extension.EqualsUncase(".mj2")) return VideoMj2;
            if (extension.EqualsUncase(".mjp2")) return VideoMj2;
            if (extension.EqualsUncase(".mlp")) return ApplicationVndDolbyMlp;
            if (extension.EqualsUncase(".mmd")) return ApplicationVndChipnutsKaraokeMmd;
            if (extension.EqualsUncase(".mmf")) return ApplicationVndSmaf;
            if (extension.EqualsUncase(".mmr")) return ImageVndFujixeroxEdmicsMmr;
            if (extension.EqualsUncase(".mny")) return ApplicationXMsmoney;
            if (extension.EqualsUncase(".mobi")) return ApplicationXMobipocketEbook;
            if (extension.EqualsUncase(".mov")) return VideoQuicktime;
            if (extension.EqualsUncase(".movie")) return VideoXSgiMovie;
            if (extension.EqualsUncase(".mp2")) return AudioMpeg;
            if (extension.EqualsUncase(".mp2a")) return AudioMpeg;
            if (extension.EqualsUncase(".mp3")) return AudioMpeg;
            if (extension.EqualsUncase(".mp4")) return VideoMp4;
            if (extension.EqualsUncase(".mp4a")) return AudioMp4;
            if (extension.EqualsUncase(".mp4s")) return ApplicationMp4;
            if (extension.EqualsUncase(".mp4v")) return VideoMp4;
            if (extension.EqualsUncase(".mpa")) return VideoMpeg;
            if (extension.EqualsUncase(".mpc")) return ApplicationVndMophunCertificate;
            if (extension.EqualsUncase(".mpe")) return VideoMpeg;
            if (extension.EqualsUncase(".mpeg")) return VideoMpeg;
            if (extension.EqualsUncase(".mpg")) return VideoMpeg;
            if (extension.EqualsUncase(".mpg4")) return VideoMp4;
            if (extension.EqualsUncase(".mpga")) return AudioMpeg;
            if (extension.EqualsUncase(".mpkg")) return ApplicationVndAppleInstallerXml;
            if (extension.EqualsUncase(".mpm")) return ApplicationVndBlueiceMultipass;
            if (extension.EqualsUncase(".mpn")) return ApplicationVndMophunApplication;
            if (extension.EqualsUncase(".mpp")) return ApplicationVndMsProject;
            if (extension.EqualsUncase(".mpt")) return ApplicationVndMsProject;
            if (extension.EqualsUncase(".mpy")) return ApplicationVndIbmMinipay;
            if (extension.EqualsUncase(".mqy")) return ApplicationVndMobiusMqy;
            if (extension.EqualsUncase(".mrc")) return ApplicationMarc;
            if (extension.EqualsUncase(".ms")) return TextTroff;
            if (extension.EqualsUncase(".mscml")) return ApplicationMediaservercontrolXml;
            if (extension.EqualsUncase(".mseed")) return ApplicationVndFdsnMseed;
            if (extension.EqualsUncase(".mseq")) return ApplicationVndMseq;
            if (extension.EqualsUncase(".msf")) return ApplicationVndEpsonMsf;
            if (extension.EqualsUncase(".msh")) return ModelMesh;
            if (extension.EqualsUncase(".msi")) return ApplicationXMsdownload;
            if (extension.EqualsUncase(".msl")) return ApplicationVndMobiusMsl;
            if (extension.EqualsUncase(".msty")) return ApplicationVndMuveeStyle;
            if (extension.EqualsUncase(".mts")) return ModelVndMts;
            if (extension.EqualsUncase(".mus")) return ApplicationVndMusician;
            if (extension.EqualsUncase(".musicxml")) return ApplicationVndRecordareMusicxmlXml;
            if (extension.EqualsUncase(".mvb")) return ApplicationXMsmediaview;
            if (extension.EqualsUncase(".mwf")) return ApplicationVndMfer;
            if (extension.EqualsUncase(".mxf")) return ApplicationMxf;
            if (extension.EqualsUncase(".mxl")) return ApplicationVndRecordareMusicxml;
            if (extension.EqualsUncase(".mxml")) return ApplicationXvXml;
            if (extension.EqualsUncase(".mxs")) return ApplicationVndTriscapeMxs;
            if (extension.EqualsUncase(".mxu")) return VideoVndMpegurl;
            if (extension.EqualsUncase(".n-gage")) return ApplicationVndNokiaNGageSymbianInstall;
            if (extension.EqualsUncase(".nb")) return ApplicationMathematica;
            if (extension.EqualsUncase(".nc")) return ApplicationXNetcdf;
            if (extension.EqualsUncase(".ncx")) return ApplicationXDtbncxXml;
            if (extension.EqualsUncase(".ngdat")) return ApplicationVndNokiaNGageData;
            if (extension.EqualsUncase(".nlu")) return ApplicationVndNeurolanguageNlu;
            if (extension.EqualsUncase(".nml")) return ApplicationVndEnliven;
            if (extension.EqualsUncase(".nnd")) return ApplicationVndNoblenetDirectory;
            if (extension.EqualsUncase(".nns")) return ApplicationVndNoblenetSealer;
            if (extension.EqualsUncase(".nnw")) return ApplicationVndNoblenetWeb;
            if (extension.EqualsUncase(".npx")) return ImageVndNetFpx;
            if (extension.EqualsUncase(".nsf")) return ApplicationVndLotusNotes;
            if (extension.EqualsUncase(".nws")) return MessageRfc822;
            if (extension.EqualsUncase(".o")) return ApplicationOctetStream;
            if (extension.EqualsUncase(".oa2")) return ApplicationVndFujitsuOasys2;
            if (extension.EqualsUncase(".oa3")) return ApplicationVndFujitsuOasys3;
            if (extension.EqualsUncase(".oas")) return ApplicationVndFujitsuOasys;
            if (extension.EqualsUncase(".obd")) return ApplicationXMsbinder;
            if (extension.EqualsUncase(".obj")) return ApplicationOctetStream;
            if (extension.EqualsUncase(".oda")) return ApplicationOda;
            if (extension.EqualsUncase(".odb")) return ApplicationVndOasisOpendocumentDatabase;
            if (extension.EqualsUncase(".odc")) return ApplicationVndOasisOpendocumentChart;
            if (extension.EqualsUncase(".odf")) return ApplicationVndOasisOpendocumentFormula;
            if (extension.EqualsUncase(".odft")) return ApplicationVndOasisOpendocumentFormulaTemplate;
            if (extension.EqualsUncase(".odg")) return ApplicationVndOasisOpendocumentGraphics;
            if (extension.EqualsUncase(".odi")) return ApplicationVndOasisOpendocumentImage;
            if (extension.EqualsUncase(".odp")) return ApplicationVndOasisOpendocumentPresentation;
            if (extension.EqualsUncase(".ods")) return ApplicationVndOasisOpendocumentSpreadsheet;
            if (extension.EqualsUncase(".odt")) return ApplicationVndOasisOpendocumentText;
            if (extension.EqualsUncase(".oga")) return AudioOgg;
            if (extension.EqualsUncase(".ogg")) return AudioOgg;
            if (extension.EqualsUncase(".ogv")) return VideoOgg;
            if (extension.EqualsUncase(".ogx")) return ApplicationOgg;
            if (extension.EqualsUncase(".onepkg")) return ApplicationOnenote;
            if (extension.EqualsUncase(".onetmp")) return ApplicationOnenote;
            if (extension.EqualsUncase(".onetoc")) return ApplicationOnenote;
            if (extension.EqualsUncase(".onetoc2")) return ApplicationOnenote;
            if (extension.EqualsUncase(".opf")) return ApplicationOebpsPackageXml;
            if (extension.EqualsUncase(".oprc")) return ApplicationVndPalm;
            if (extension.EqualsUncase(".org")) return ApplicationVndLotusOrganizer;
            if (extension.EqualsUncase(".osf")) return ApplicationVndYamahaOpenscoreformat;
            if (extension.EqualsUncase(".osfpvg")) return ApplicationVndYamahaOpenscoreformatOsfpvgXml;
            if (extension.EqualsUncase(".otc")) return ApplicationVndOasisOpendocumentChartTemplate;
            if (extension.EqualsUncase(".otf")) return ApplicationXFontOtf;
            if (extension.EqualsUncase(".otg")) return ApplicationVndOasisOpendocumentGraphicsTemplate;
            if (extension.EqualsUncase(".oth")) return ApplicationVndOasisOpendocumentTextWeb;
            if (extension.EqualsUncase(".oti")) return ApplicationVndOasisOpendocumentImageTemplate;
            if (extension.EqualsUncase(".otm")) return ApplicationVndOasisOpendocumentTextMaster;
            if (extension.EqualsUncase(".otp")) return ApplicationVndOasisOpendocumentPresentationTemplate;
            if (extension.EqualsUncase(".ots")) return ApplicationVndOasisOpendocumentSpreadsheetTemplate;
            if (extension.EqualsUncase(".ott")) return ApplicationVndOasisOpendocumentTextTemplate;
            if (extension.EqualsUncase(".oxt")) return ApplicationVndOpenofficeorgExtension;
            if (extension.EqualsUncase(".p")) return TextXPascal;
            if (extension.EqualsUncase(".p10")) return ApplicationPkcs10;
            if (extension.EqualsUncase(".p12")) return ApplicationXPkcs12;
            if (extension.EqualsUncase(".p7b")) return ApplicationXPkcs7Certificates;
            if (extension.EqualsUncase(".p7c")) return ApplicationPkcs7Mime;
            if (extension.EqualsUncase(".p7m")) return ApplicationPkcs7Mime;
            if (extension.EqualsUncase(".p7r")) return ApplicationXPkcs7Certreqresp;
            if (extension.EqualsUncase(".p7s")) return ApplicationPkcs7Signature;
            if (extension.EqualsUncase(".pas")) return TextXPascal;
            if (extension.EqualsUncase(".pbd")) return ApplicationVndPowerbuilder6;
            if (extension.EqualsUncase(".pbm")) return ImageXPortableBitmap;
            if (extension.EqualsUncase(".pcf")) return ApplicationXFontPcf;
            if (extension.EqualsUncase(".pcl")) return ApplicationVndHpPcl;
            if (extension.EqualsUncase(".pclxl")) return ApplicationVndHpPclxl;
            if (extension.EqualsUncase(".pct")) return ImageXPict;
            if (extension.EqualsUncase(".pcurl")) return ApplicationVndCurlPcurl;
            if (extension.EqualsUncase(".pcx")) return ImageXPcx;
            if (extension.EqualsUncase(".pdb")) return ApplicationVndPalm;
            if (extension.EqualsUncase(".pdf")) return ApplicationPdf;
            if (extension.EqualsUncase(".pfa")) return ApplicationXFontType1;
            if (extension.EqualsUncase(".pfb")) return ApplicationXFontType1;
            if (extension.EqualsUncase(".pfm")) return ApplicationXFontType1;
            if (extension.EqualsUncase(".pfr")) return ApplicationFontTdpfr;
            if (extension.EqualsUncase(".pfx")) return ApplicationXPkcs12;
            if (extension.EqualsUncase(".pgm")) return ImageXPortableGraymap;
            if (extension.EqualsUncase(".pgn")) return ApplicationXChessPgn;
            if (extension.EqualsUncase(".pgp")) return ApplicationPgpEncrypted;
            if (extension.EqualsUncase(".pic")) return ImageXPict;
            if (extension.EqualsUncase(".pkg")) return ApplicationOctetStream;
            if (extension.EqualsUncase(".pki")) return ApplicationPkixcmp;
            if (extension.EqualsUncase(".pkipath")) return ApplicationPkixPkipath;
            if (extension.EqualsUncase(".pl")) return TextPlain;
            if (extension.EqualsUncase(".plb")) return ApplicationVnd3gppPicBwLarge;
            if (extension.EqualsUncase(".plc")) return ApplicationVndMobiusPlc;
            if (extension.EqualsUncase(".plf")) return ApplicationVndPocketlearn;
            if (extension.EqualsUncase(".pls")) return ApplicationPlsXml;
            if (extension.EqualsUncase(".pml")) return ApplicationVndCtcPosml;
            if (extension.EqualsUncase(".png")) return ImagePng;
            if (extension.EqualsUncase(".pnm")) return ImageXPortableAnymap;
            if (extension.EqualsUncase(".portpkg")) return ApplicationVndMacportsPortpkg;
            if (extension.EqualsUncase(".pot")) return ApplicationVndMsPowerpoint;
            if (extension.EqualsUncase(".potm")) return ApplicationVndMsPowerpointTemplateMacroenabled12;
            if (extension.EqualsUncase(".potx")) return ApplicationVndOpenxmlformatsOfficedocumentPresentationmlTemplate;
            if (extension.EqualsUncase(".ppa")) return ApplicationVndMsPowerpoint;
            if (extension.EqualsUncase(".ppam")) return ApplicationVndMsPowerpointAddinMacroenabled12;
            if (extension.EqualsUncase(".ppd")) return ApplicationVndCupsPpd;
            if (extension.EqualsUncase(".ppm")) return ImageXPortablePixmap;
            if (extension.EqualsUncase(".pps")) return ApplicationVndMsPowerpoint;
            if (extension.EqualsUncase(".ppsm")) return ApplicationVndMsPowerpointSlideshowMacroenabled12;
            if (extension.EqualsUncase(".ppsx")) return ApplicationVndOpenxmlformatsOfficedocumentPresentationmlSlideshow;
            if (extension.EqualsUncase(".ppt")) return ApplicationVndMsPowerpoint;
            if (extension.EqualsUncase(".pptm")) return ApplicationVndMsPowerpointPresentationMacroenabled12;
            if (extension.EqualsUncase(".pptx")) return ApplicationVndOpenxmlformatsOfficedocumentPresentationmlPresentation;
            if (extension.EqualsUncase(".pqa")) return ApplicationVndPalm;
            if (extension.EqualsUncase(".prc")) return ApplicationXMobipocketEbook;
            if (extension.EqualsUncase(".pre")) return ApplicationVndLotusFreelance;
            if (extension.EqualsUncase(".prf")) return ApplicationPicsRules;
            if (extension.EqualsUncase(".ps")) return ApplicationPostscript;
            if (extension.EqualsUncase(".psb")) return ApplicationVnd3gppPicBwSmall;
            if (extension.EqualsUncase(".psd")) return ImageVndAdobePhotoshop;
            if (extension.EqualsUncase(".psf")) return ApplicationXFontLinuxPsf;
            if (extension.EqualsUncase(".ptid")) return ApplicationVndPviPtid1;
            if (extension.EqualsUncase(".pub")) return ApplicationXMspublisher;
            if (extension.EqualsUncase(".pvb")) return ApplicationVnd3gppPicBwVar;
            if (extension.EqualsUncase(".pwn")) return ApplicationVnd3mPostItNotes;
            if (extension.EqualsUncase(".pwz")) return ApplicationVndMsPowerpoint;
            if (extension.EqualsUncase(".py")) return TextXPython;
            if (extension.EqualsUncase(".pya")) return AudioVndMsPlayreadyMediaPya;
            if (extension.EqualsUncase(".pyc")) return ApplicationXPythonCode;
            if (extension.EqualsUncase(".pyo")) return ApplicationXPythonCode;
            if (extension.EqualsUncase(".pyv")) return VideoVndMsPlayreadyMediaPyv;
            if (extension.EqualsUncase(".qam")) return ApplicationVndEpsonQuickanime;
            if (extension.EqualsUncase(".qbo")) return ApplicationVndIntuQbo;
            if (extension.EqualsUncase(".qfx")) return ApplicationVndIntuQfx;
            if (extension.EqualsUncase(".qps")) return ApplicationVndPublishareDeltaTree;
            if (extension.EqualsUncase(".qt")) return VideoQuicktime;
            if (extension.EqualsUncase(".qwd")) return ApplicationVndQuarkQuarkxpress;
            if (extension.EqualsUncase(".qwt")) return ApplicationVndQuarkQuarkxpress;
            if (extension.EqualsUncase(".qxb")) return ApplicationVndQuarkQuarkxpress;
            if (extension.EqualsUncase(".qxd")) return ApplicationVndQuarkQuarkxpress;
            if (extension.EqualsUncase(".qxl")) return ApplicationVndQuarkQuarkxpress;
            if (extension.EqualsUncase(".qxt")) return ApplicationVndQuarkQuarkxpress;
            if (extension.EqualsUncase(".ra")) return AudioXPnRealaudio;
            if (extension.EqualsUncase(".ram")) return AudioXPnRealaudio;
            if (extension.EqualsUncase(".rar")) return ApplicationXRarCompressed;
            if (extension.EqualsUncase(".ras")) return ImageXCmuRaster;
            if (extension.EqualsUncase(".rcprofile")) return ApplicationVndIpunpluggedRcprofile;
            if (extension.EqualsUncase(".rdf")) return ApplicationRdfXml;
            if (extension.EqualsUncase(".rdz")) return ApplicationVndDataVisionRdz;
            if (extension.EqualsUncase(".rep")) return ApplicationVndBusinessobjects;
            if (extension.EqualsUncase(".res")) return ApplicationXDtbresourceXml;
            if (extension.EqualsUncase(".rgb")) return ImageXRgb;
            if (extension.EqualsUncase(".rif")) return ApplicationReginfoXml;
            if (extension.EqualsUncase(".rl")) return ApplicationResourceListsXml;
            if (extension.EqualsUncase(".rlc")) return ImageVndFujixeroxEdmicsRlc;
            if (extension.EqualsUncase(".rld")) return ApplicationResourceListsDiffXml;
            if (extension.EqualsUncase(".rm")) return ApplicationVndRnRealmedia;
            if (extension.EqualsUncase(".rmi")) return AudioMidi;
            if (extension.EqualsUncase(".rmp")) return AudioXPnRealaudioPlugin;
            if (extension.EqualsUncase(".rms")) return ApplicationVndJcpJavameMidletRms;
            if (extension.EqualsUncase(".rnc")) return ApplicationRelaxNgCompactSyntax;
            if (extension.EqualsUncase(".roff")) return TextTroff;
            if (extension.EqualsUncase(".rpm")) return ApplicationXRpm;
            if (extension.EqualsUncase(".rpss")) return ApplicationVndNokiaRadioPresets;
            if (extension.EqualsUncase(".rpst")) return ApplicationVndNokiaRadioPreset;
            if (extension.EqualsUncase(".rq")) return ApplicationSparqlQuery;
            if (extension.EqualsUncase(".rs")) return ApplicationRlsServicesXml;
            if (extension.EqualsUncase(".rsd")) return ApplicationRsdXml;
            if (extension.EqualsUncase(".rss")) return ApplicationRssXml;
            if (extension.EqualsUncase(".rtf")) return ApplicationRtf;
            if (extension.EqualsUncase(".rtx")) return TextRichtext;
            if (extension.EqualsUncase(".s")) return TextXAsm;
            if (extension.EqualsUncase(".saf")) return ApplicationVndYamahaSmafAudio;
            if (extension.EqualsUncase(".sbml")) return ApplicationSbmlXml;
            if (extension.EqualsUncase(".sc")) return ApplicationVndIbmSecureContainer;
            if (extension.EqualsUncase(".scd")) return ApplicationXMsschedule;
            if (extension.EqualsUncase(".scm")) return ApplicationVndLotusScreencam;
            if (extension.EqualsUncase(".scq")) return ApplicationScvpCvRequest;
            if (extension.EqualsUncase(".scs")) return ApplicationScvpCvResponse;
            if (extension.EqualsUncase(".scurl")) return TextVndCurlScurl;
            if (extension.EqualsUncase(".sda")) return ApplicationVndStardivisionDraw;
            if (extension.EqualsUncase(".sdc")) return ApplicationVndStardivisionCalc;
            if (extension.EqualsUncase(".sdd")) return ApplicationVndStardivisionImpress;
            if (extension.EqualsUncase(".sdkd")) return ApplicationVndSolentSdkmXml;
            if (extension.EqualsUncase(".sdkm")) return ApplicationVndSolentSdkmXml;
            if (extension.EqualsUncase(".sdp")) return ApplicationSdp;
            if (extension.EqualsUncase(".sdw")) return ApplicationVndStardivisionWriter;
            if (extension.EqualsUncase(".see")) return ApplicationVndSeemail;
            if (extension.EqualsUncase(".seed")) return ApplicationVndFdsnSeed;
            if (extension.EqualsUncase(".sema")) return ApplicationVndSema;
            if (extension.EqualsUncase(".semd")) return ApplicationVndSemd;
            if (extension.EqualsUncase(".semf")) return ApplicationVndSemf;
            if (extension.EqualsUncase(".ser")) return ApplicationJavaSerializedObject;
            if (extension.EqualsUncase(".setpay")) return ApplicationSetPaymentInitiation;
            if (extension.EqualsUncase(".setreg")) return ApplicationSetRegistrationInitiation;
            if (extension.EqualsUncase(".sfd-hdstx")) return ApplicationVndHydrostatixSofData;
            if (extension.EqualsUncase(".sfs")) return ApplicationVndSpotfireSfs;
            if (extension.EqualsUncase(".sgl")) return ApplicationVndStardivisionWriterGlobal;
            if (extension.EqualsUncase(".sgm")) return TextSgml;
            if (extension.EqualsUncase(".sgml")) return TextSgml;
            if (extension.EqualsUncase(".sh")) return ApplicationXSh;
            if (extension.EqualsUncase(".shar")) return ApplicationXShar;
            if (extension.EqualsUncase(".shf")) return ApplicationShfXml;
            if (extension.EqualsUncase(".si")) return TextVndWapSi;
            if (extension.EqualsUncase(".sic")) return ApplicationVndWapSic;
            if (extension.EqualsUncase(".sig")) return ApplicationPgpSignature;
            if (extension.EqualsUncase(".silo")) return ModelMesh;
            if (extension.EqualsUncase(".sis")) return ApplicationVndSymbianInstall;
            if (extension.EqualsUncase(".sisx")) return ApplicationVndSymbianInstall;
            if (extension.EqualsUncase(".sit")) return ApplicationXStuffit;
            if (extension.EqualsUncase(".sitx")) return ApplicationXStuffitx;
            if (extension.EqualsUncase(".skd")) return ApplicationVndKoan;
            if (extension.EqualsUncase(".skm")) return ApplicationVndKoan;
            if (extension.EqualsUncase(".skp")) return ApplicationVndKoan;
            if (extension.EqualsUncase(".skt")) return ApplicationVndKoan;
            if (extension.EqualsUncase(".sl")) return TextVndWapSl;
            if (extension.EqualsUncase(".slc")) return ApplicationVndWapSlc;
            if (extension.EqualsUncase(".sldm")) return ApplicationVndMsPowerpointSlideMacroenabled12;
            if (extension.EqualsUncase(".sldx")) return ApplicationVndOpenxmlformatsOfficedocumentPresentationmlSlide;
            if (extension.EqualsUncase(".slt")) return ApplicationVndEpsonSalt;
            if (extension.EqualsUncase(".smf")) return ApplicationVndStardivisionMath;
            if (extension.EqualsUncase(".smi")) return ApplicationSmilXml;
            if (extension.EqualsUncase(".smil")) return ApplicationSmilXml;
            if (extension.EqualsUncase(".snd")) return AudioBasic;
            if (extension.EqualsUncase(".snf")) return ApplicationXFontSnf;
            if (extension.EqualsUncase(".so")) return ApplicationOctetStream;
            if (extension.EqualsUncase(".spc")) return ApplicationXPkcs7Certificates;
            if (extension.EqualsUncase(".spf")) return ApplicationVndYamahaSmafPhrase;
            if (extension.EqualsUncase(".spl")) return ApplicationXFuturesplash;
            if (extension.EqualsUncase(".spot")) return TextVndIn3dSpot;
            if (extension.EqualsUncase(".spp")) return ApplicationScvpVpResponse;
            if (extension.EqualsUncase(".spq")) return ApplicationScvpVpRequest;
            if (extension.EqualsUncase(".spx")) return AudioOgg;
            if (extension.EqualsUncase(".src")) return ApplicationXWaisSource;
            if (extension.EqualsUncase(".srx")) return ApplicationSparqlResultsXml;
            if (extension.EqualsUncase(".sse")) return ApplicationVndKodakDescriptor;
            if (extension.EqualsUncase(".ssf")) return ApplicationVndEpsonSsf;
            if (extension.EqualsUncase(".ssml")) return ApplicationSsmlXml;
            if (extension.EqualsUncase(".stc")) return ApplicationVndSunXmlCalcTemplate;
            if (extension.EqualsUncase(".std")) return ApplicationVndSunXmlDrawTemplate;
            if (extension.EqualsUncase(".stf")) return ApplicationVndWtStf;
            if (extension.EqualsUncase(".sti")) return ApplicationVndSunXmlImpressTemplate;
            if (extension.EqualsUncase(".stk")) return ApplicationHyperstudio;
            if (extension.EqualsUncase(".stl")) return ApplicationVndMsPkiStl;
            if (extension.EqualsUncase(".str")) return ApplicationVndPgFormat;
            if (extension.EqualsUncase(".stw")) return ApplicationVndSunXmlWriterTemplate;
            if (extension.EqualsUncase(".sus")) return ApplicationVndSusCalendar;
            if (extension.EqualsUncase(".susp")) return ApplicationVndSusCalendar;
            if (extension.EqualsUncase(".sv4cpio")) return ApplicationXSv4cpio;
            if (extension.EqualsUncase(".sv4crc")) return ApplicationXSv4crc;
            if (extension.EqualsUncase(".svd")) return ApplicationVndSvd;
            if (extension.EqualsUncase(".svg")) return ImageSvgXml;
            if (extension.EqualsUncase(".svgz")) return ImageSvgXml;
            if (extension.EqualsUncase(".swa")) return ApplicationXDirector;
            if (extension.EqualsUncase(".swf")) return ApplicationXShockwaveFlash;
            if (extension.EqualsUncase(".swi")) return ApplicationVndArastraSwi;
            if (extension.EqualsUncase(".sxc")) return ApplicationVndSunXmlCalc;
            if (extension.EqualsUncase(".sxd")) return ApplicationVndSunXmlDraw;
            if (extension.EqualsUncase(".sxg")) return ApplicationVndSunXmlWriterGlobal;
            if (extension.EqualsUncase(".sxi")) return ApplicationVndSunXmlImpress;
            if (extension.EqualsUncase(".sxm")) return ApplicationVndSunXmlMath;
            if (extension.EqualsUncase(".sxw")) return ApplicationVndSunXmlWriter;
            if (extension.EqualsUncase(".t")) return TextTroff;
            if (extension.EqualsUncase(".tao")) return ApplicationVndTaoIntentModuleArchive;
            if (extension.EqualsUncase(".tar")) return ApplicationXTar;
            if (extension.EqualsUncase(".tcap")) return ApplicationVnd3gpp2Tcap;
            if (extension.EqualsUncase(".tcl")) return ApplicationXTcl;
            if (extension.EqualsUncase(".teacher")) return ApplicationVndSmartTeacher;
            if (extension.EqualsUncase(".tex")) return ApplicationXTex;
            if (extension.EqualsUncase(".texi")) return ApplicationXTexinfo;
            if (extension.EqualsUncase(".texinfo")) return ApplicationXTexinfo;
            if (extension.EqualsUncase(".text")) return TextPlain;
            if (extension.EqualsUncase(".tfm")) return ApplicationXTexTfm;
            if (extension.EqualsUncase(".tgz")) return ApplicationXGzip;
            if (extension.EqualsUncase(".tif")) return ImageTiff;
            if (extension.EqualsUncase(".tiff")) return ImageTiff;
            if (extension.EqualsUncase(".tmo")) return ApplicationVndTmobileLivetv;
            if (extension.EqualsUncase(".torrent")) return ApplicationXBittorrent;
            if (extension.EqualsUncase(".tpl")) return ApplicationVndGrooveToolTemplate;
            if (extension.EqualsUncase(".tpt")) return ApplicationVndTridTpt;
            if (extension.EqualsUncase(".tr")) return TextTroff;
            if (extension.EqualsUncase(".tra")) return ApplicationVndTrueapp;
            if (extension.EqualsUncase(".trm")) return ApplicationXMsterminal;
            if (extension.EqualsUncase(".tsv")) return TextTabSeparatedValues;
            if (extension.EqualsUncase(".ttc")) return ApplicationXFontTtf;
            if (extension.EqualsUncase(".ttf")) return ApplicationXFontTtf;
            if (extension.EqualsUncase(".twd")) return ApplicationVndSimtechMindmapper;
            if (extension.EqualsUncase(".twds")) return ApplicationVndSimtechMindmapper;
            if (extension.EqualsUncase(".txd")) return ApplicationVndGenomatixTuxedo;
            if (extension.EqualsUncase(".txf")) return ApplicationVndMobiusTxf;
            if (extension.EqualsUncase(".txt")) return TextPlain;
            if (extension.EqualsUncase(".u32")) return ApplicationXAuthorwareBin;
            if (extension.EqualsUncase(".udeb")) return ApplicationXDebianPackage;
            if (extension.EqualsUncase(".ufd")) return ApplicationVndUfdl;
            if (extension.EqualsUncase(".ufdl")) return ApplicationVndUfdl;
            if (extension.EqualsUncase(".umj")) return ApplicationVndUmajin;
            if (extension.EqualsUncase(".unityweb")) return ApplicationVndUnity;
            if (extension.EqualsUncase(".uoml")) return ApplicationVndUomlXml;
            if (extension.EqualsUncase(".uri")) return TextUriList;
            if (extension.EqualsUncase(".uris")) return TextUriList;
            if (extension.EqualsUncase(".urls")) return TextUriList;
            if (extension.EqualsUncase(".ustar")) return ApplicationXUstar;
            if (extension.EqualsUncase(".utz")) return ApplicationVndUiqTheme;
            if (extension.EqualsUncase(".uu")) return TextXUuencode;
            if (extension.EqualsUncase(".vcd")) return ApplicationXCdlink;
            if (extension.EqualsUncase(".vcf")) return TextXVcard;
            if (extension.EqualsUncase(".vcg")) return ApplicationVndGrooveVcard;
            if (extension.EqualsUncase(".vcs")) return TextXVcalendar;
            if (extension.EqualsUncase(".vcx")) return ApplicationVndVcx;
            if (extension.EqualsUncase(".vis")) return ApplicationVndVisionary;
            if (extension.EqualsUncase(".viv")) return VideoVndVivo;
            if (extension.EqualsUncase(".vor")) return ApplicationVndStardivisionWriter;
            if (extension.EqualsUncase(".vox")) return ApplicationXAuthorwareBin;
            if (extension.EqualsUncase(".vrml")) return ModelVrml;
            if (extension.EqualsUncase(".vsd")) return ApplicationVndVisio;
            if (extension.EqualsUncase(".vsf")) return ApplicationVndVsf;
            if (extension.EqualsUncase(".vss")) return ApplicationVndVisio;
            if (extension.EqualsUncase(".vst")) return ApplicationVndVisio;
            if (extension.EqualsUncase(".vsw")) return ApplicationVndVisio;
            if (extension.EqualsUncase(".vtu")) return ModelVndVtu;
            if (extension.EqualsUncase(".vxml")) return ApplicationVoicexmlXml;
            if (extension.EqualsUncase(".w3d")) return ApplicationXDirector;
            if (extension.EqualsUncase(".wad")) return ApplicationXDoom;
            if (extension.EqualsUncase(".wav")) return AudioXWav;
            if (extension.EqualsUncase(".wax")) return AudioXMsWax;
            if (extension.EqualsUncase(".wbmp")) return ImageVndWapWbmp;
            if (extension.EqualsUncase(".wbs")) return ApplicationVndCriticaltoolsWbsXml;
            if (extension.EqualsUncase(".wbxml")) return ApplicationVndWapWbxml;
            if (extension.EqualsUncase(".wcm")) return ApplicationVndMsWorks;
            if (extension.EqualsUncase(".wdb")) return ApplicationVndMsWorks;
            if (extension.EqualsUncase(".wiz")) return ApplicationMsword;
            if (extension.EqualsUncase(".wks")) return ApplicationVndMsWorks;
            if (extension.EqualsUncase(".wm")) return VideoXMsWm;
            if (extension.EqualsUncase(".wma")) return AudioXMsWma;
            if (extension.EqualsUncase(".wmd")) return ApplicationXMsWmd;
            if (extension.EqualsUncase(".wmf")) return ApplicationXMsmetafile;
            if (extension.EqualsUncase(".wml")) return TextVndWapWml;
            if (extension.EqualsUncase(".wmlc")) return ApplicationVndWapWmlc;
            if (extension.EqualsUncase(".wmls")) return TextVndWapWmlscript;
            if (extension.EqualsUncase(".wmlsc")) return ApplicationVndWapWmlscriptc;
            if (extension.EqualsUncase(".wmv")) return VideoXMsWmv;
            if (extension.EqualsUncase(".wmx")) return VideoXMsWmx;
            if (extension.EqualsUncase(".wmz")) return ApplicationXMsWmz;
            if (extension.EqualsUncase(".wpd")) return ApplicationVndWordperfect;
            if (extension.EqualsUncase(".wpl")) return ApplicationVndMsWpl;
            if (extension.EqualsUncase(".wps")) return ApplicationVndMsWorks;
            if (extension.EqualsUncase(".wqd")) return ApplicationVndWqd;
            if (extension.EqualsUncase(".woff")) return ApplicationFontWoff;
            if (extension.EqualsUncase(".woff2")) return FontWoff2;
            if (extension.EqualsUncase(".wri")) return ApplicationXMswrite;
            if (extension.EqualsUncase(".wrl")) return ModelVrml;
            if (extension.EqualsUncase(".wsdl")) return ApplicationWsdlXml;
            if (extension.EqualsUncase(".wspolicy")) return ApplicationWspolicyXml;
            if (extension.EqualsUncase(".wtb")) return ApplicationVndWebturbo;
            if (extension.EqualsUncase(".wvx")) return VideoXMsWvx;
            if (extension.EqualsUncase(".x32")) return ApplicationXAuthorwareBin;
            if (extension.EqualsUncase(".x3d")) return ApplicationVndHzn3dCrossword;
            if (extension.EqualsUncase(".xap")) return ApplicationXSilverlightApp;
            if (extension.EqualsUncase(".xar")) return ApplicationVndXara;
            if (extension.EqualsUncase(".xbap")) return ApplicationXMsXbap;
            if (extension.EqualsUncase(".xbd")) return ApplicationVndFujixeroxDocuworksBinder;
            if (extension.EqualsUncase(".xbm")) return ImageXXbitmap;
            if (extension.EqualsUncase(".xdm")) return ApplicationVndSyncmlDmXml;
            if (extension.EqualsUncase(".xdp")) return ApplicationVndAdobeXdpXml;
            if (extension.EqualsUncase(".xdw")) return ApplicationVndFujixeroxDocuworks;
            if (extension.EqualsUncase(".xenc")) return ApplicationXencXml;
            if (extension.EqualsUncase(".xer")) return ApplicationPatchOpsErrorXml;
            if (extension.EqualsUncase(".xfdf")) return ApplicationVndAdobeXfdf;
            if (extension.EqualsUncase(".xfdl")) return ApplicationVndXfdl;
            if (extension.EqualsUncase(".xht")) return ApplicationXhtmlXml;
            if (extension.EqualsUncase(".xhtml")) return ApplicationXhtmlXml;
            if (extension.EqualsUncase(".xhvml")) return ApplicationXvXml;
            if (extension.EqualsUncase(".xif")) return ImageVndXiff;
            if (extension.EqualsUncase(".xla")) return ApplicationVndMsExcel;
            if (extension.EqualsUncase(".xlam")) return ApplicationVndMsExcelAddinMacroenabled12;
            if (extension.EqualsUncase(".xlb")) return ApplicationVndMsExcel;
            if (extension.EqualsUncase(".xlc")) return ApplicationVndMsExcel;
            if (extension.EqualsUncase(".xlm")) return ApplicationVndMsExcel;
            if (extension.EqualsUncase(".xls")) return ApplicationVndMsExcel;
            if (extension.EqualsUncase(".xlsb")) return ApplicationVndMsExcelSheetBinaryMacroenabled12;
            if (extension.EqualsUncase(".xlsm")) return ApplicationVndMsExcelSheetMacroenabled12;
            if (extension.EqualsUncase(".xlsx")) return ApplicationVndOpenxmlformatsOfficedocumentSpreadsheetmlSheet;
            if (extension.EqualsUncase(".xlt")) return ApplicationVndMsExcel;
            if (extension.EqualsUncase(".xltm")) return ApplicationVndMsExcelTemplateMacroenabled12;
            if (extension.EqualsUncase(".xltx")) return ApplicationVndOpenxmlformatsOfficedocumentSpreadsheetmlTemplate;
            if (extension.EqualsUncase(".xlw")) return ApplicationVndMsExcel;
            if (extension.EqualsUncase(".xml")) return ApplicationXml;
            if (extension.EqualsUncase(".xo")) return ApplicationVndOlpcSugar;
            if (extension.EqualsUncase(".xop")) return ApplicationXopXml;
            if (extension.EqualsUncase(".xpdl")) return ApplicationXml;
            if (extension.EqualsUncase(".xpi")) return ApplicationXXpinstall;
            if (extension.EqualsUncase(".xpm")) return ImageXXpixmap;
            if (extension.EqualsUncase(".xpr")) return ApplicationVndIsXpr;
            if (extension.EqualsUncase(".xps")) return ApplicationVndMsXpsdocument;
            if (extension.EqualsUncase(".xpw")) return ApplicationVndInterconFormnet;
            if (extension.EqualsUncase(".xpx")) return ApplicationVndInterconFormnet;
            if (extension.EqualsUncase(".xsl")) return ApplicationXml;
            if (extension.EqualsUncase(".xslt")) return ApplicationXsltXml;
            if (extension.EqualsUncase(".xsm")) return ApplicationVndSyncmlXml;
            if (extension.EqualsUncase(".xspf")) return ApplicationXspfXml;
            if (extension.EqualsUncase(".xul")) return ApplicationVndMozillaXulXml;
            if (extension.EqualsUncase(".xvm")) return ApplicationXvXml;
            if (extension.EqualsUncase(".xvml")) return ApplicationXvXml;
            if (extension.EqualsUncase(".xwd")) return ImageXXwindowdump;
            if (extension.EqualsUncase(".xyz")) return ChemicalXXyz;
            if (extension.EqualsUncase(".zaz")) return ApplicationVndZzazzDeckXml;
            if (extension.EqualsUncase(".zip")) return ApplicationZip;
            if (extension.EqualsUncase(".zir")) return ApplicationVndZul;
            if (extension.EqualsUncase(".zirz")) return ApplicationVndZul;
            if (extension.EqualsUncase(".zmm")) return ApplicationVndHandheldEntertainmentXml;
            return null;
        }
    }
}
